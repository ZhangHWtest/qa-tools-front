{"remainingRequest":"/Users/zhwtest/Desktop/VueProjects/flask_api_ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhwtest/Desktop/VueProjects/flask_api_ui/src/views/project/ProjectList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zhwtest/Desktop/VueProjects/flask_api_ui/src/views/project/ProjectList.vue","mtime":1585727366738},{"path":"/Users/zhwtest/Desktop/VueProjects/flask_api_ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhwtest/Desktop/VueProjects/flask_api_ui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zhwtest/Desktop/VueProjects/flask_api_ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhwtest/Desktop/VueProjects/flask_api_ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnUHJvamVjdExpc3QnLAogIGRhdGEgKCkgewogICAgcmV0dXJuIHsKICAgICAgcHJvamVjdExpc3RCb2R5OiB7CiAgICAgICAgcGFnZV9udW06IDEKICAgICAgfSwKICAgICAgY3JlYXRlUHJvamVjdEJvZHk6IHsKICAgICAgICBwcm9qZWN0X2lkOiAnJywKICAgICAgICBwcm9qZWN0X25hbWU6ICcnCiAgICAgIH0sCiAgICAgIGVuaXRQcm9qZWN0Qm9keTogewogICAgICAgIHByb2plY3RfaWQ6ICcnLAogICAgICAgIHByb2plY3RfbmFtZTogJycKICAgICAgfSwKICAgICAgZGVsUHJvamVjdEJvZHk6IHsKICAgICAgICBwcm9qZWN0X2lkOiAnJwogICAgICB9LAogICAgICBwcm9qZWN0TGlzdFJlc0xpc3Q6IHsKCiAgICAgIH0sCiAgICAgIGFkZERpYWxvZ1Zpc2libGU6IGZhbHNlLAogICAgICBlZGl0RGlhbG9nVmlzaWJsZTogZmFsc2UsCiAgICAgIGFkZFJ1bGVzRm9ybTogewogICAgICAgIHByb2plY3RfbmFtZTogWwogICAgICAgICAgeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogJ+ivt+i+k+WFpemhueebruWQjScsIHRyaWdnZXI6ICdibHVyJyB9CiAgICAgICAgXQogICAgICB9CiAgICB9CiAgfSwKICBjcmVhdGVkICgpIHsKICAgIHRoaXMucHJvamVjdExpc3QoKQogIH0sCiAgbWV0aG9kczogewogICAgLy8g54K55Ye76Lez6L2s6IezUHJvamVjdEluZm/pobXpnaIKICAgIGdvUHJvamVjdEluZm8gKF9pZCwgX25hbWUpIHsKICAgICAgdGhpcy4kcm91dGVyLnB1c2goeyBwYXRoOiAnL3Byb2plY3QvaW5mbycsIHF1ZXJ5OiB7IGlkOiBfaWQsIG5hbWU6IF9uYW1lIH0gfSkKICAgIH0sCiAgICAvLyDnm5HlkKwg6aG156CB5YC85pS55Y+Y55qE5LqL5Lu2CiAgICBoYW5kbGVDdXJyZW50Q2hhbmdlIChuZXdQYWdlKSB7CiAgICAgIHRoaXMucHJvamVjdExpc3RCb2R5LnBhZ2VfbnVtID0gbmV3UGFnZQogICAgICB0aGlzLnByb2plY3RMaXN0KCkKICAgIH0sCiAgICAvLyDojrflj5bmiYDmnInpobnnm67liJfooagKICAgIGFzeW5jIHByb2plY3RMaXN0ICgpIHsKICAgICAgY29uc3QgeyBkYXRhOiBwcm9qZWN0UmVzIH0gPSBhd2FpdCB0aGlzLiRhcGkucHJvamVjdC5nZXRQcm9qZWN0TGlzdCgKICAgICAgICB0aGlzLnByb2plY3RMaXN0Qm9keQogICAgICApCiAgICAgIGlmIChwcm9qZWN0UmVzLmNvZGUgIT09IDEpIHsKICAgICAgICByZXR1cm4gdGhpcy4kbWVzc2FnZS5lcnJvcign6I635Y+W6aG555uu5YiX6KGo5aSx6LSl77yBJykKICAgICAgfQogICAgICB0aGlzLnByb2plY3RMaXN0UmVzTGlzdCA9IHByb2plY3RSZXMuZGF0YQogICAgfSwKICAgIC8vIOebkeWQrOa3u+WKoOWvueivneahhuWFs+mXreS6i+S7tgogICAgYWRkRGlhbG9nQ2xvc2VkICgpIHsKICAgICAgdGhpcy4kcmVmcy5hZGRGb3JtUmVmLnJlc2V0RmllbGRzKCkKICAgIH0sCiAgICAvLyDlsZXnpLrnvJbovpHnmoTlr7nor53moYYKICAgIGFzeW5jIHNob3dFZGl0RGlhbG9nIChzY29wZSkgewogICAgICB0aGlzLmVuaXRQcm9qZWN0Qm9keS5wcm9qZWN0X2lkID0gc2NvcGUucm93LnByb2plY3RfaWQKICAgICAgdGhpcy5lbml0UHJvamVjdEJvZHkucHJvamVjdF9uYW1lID0gc2NvcGUucm93LnByb2plY3RfbmFtZQogICAgICB0aGlzLmVkaXREaWFsb2dWaXNpYmxlID0gdHJ1ZQogICAgfSwKICAgIGVkaXREaWFsb2dDbG9zZWQgKCkgewogICAgICB0aGlzLiRyZWZzLmFkZEZvcm1SZWYucmVzZXRGaWVsZHMoKQogICAgfSwKICAgIC8vIOS/ruaUueS/oeaBr+W5tuaPkOS6pAogICAgZWRpdFByb2plY3RJbmZvICgpIHsKICAgICAgdGhpcy4kcmVmcy5hZGRGb3JtUmVmLnZhbGlkYXRlKGFzeW5jIHZhbGlkID0+IHsKICAgICAgICBpZiAoIXZhbGlkKSByZXR1cm4KICAgICAgICBjb25zdCB7IGRhdGE6IHJlcyB9ID0gYXdhaXQgdGhpcy4kYXBpLnByb2plY3QuZWRpdFByb2plY3QoCiAgICAgICAgICB0aGlzLmVuaXRQcm9qZWN0Qm9keQogICAgICAgICkKICAgICAgICBpZiAocmVzLmNvZGUgIT09IDEpIHsKICAgICAgICAgIHJldHVybiB0aGlzLiRtZXNzYWdlLmVycm9yKCfkv67mlLnkv6Hmga/lpLHotKXvvIEnKQogICAgICAgIH0KICAgICAgICAvLyDlhbPpl63lr7nmoYYKICAgICAgICB0aGlzLmVkaXREaWFsb2dWaXNpYmxlID0gZmFsc2UKICAgICAgICAvLyDliLfmlrDmlbDmja4KICAgICAgICB0aGlzLnByb2plY3RMaXN0KCkKICAgICAgICAvLyDmj5DnpLrkv6Hmga8KICAgICAgICB0aGlzLiRtZXNzYWdlLnN1Y2Nlc3MoJ+abtOaWsOaIkOWKn++8gScpCiAgICAgIH0pCiAgICB9LAogICAgLy8g5qC55o2uaWTliKDpmaQKICAgIGFzeW5jIHJlbW92ZVByb2plY3RCeUlkIChfaWQpIHsKICAgICAgdGhpcy5kZWxQcm9qZWN0Qm9keS5wcm9qZWN0X2lkID0gX2lkCiAgICAgIC8vIOW8ueeql+ivoumXruaYr+WQpuWIoOmZpAogICAgICBjb25zdCBjb25maXJtUmVzdWx0ID0gYXdhaXQgdGhpcy4kY29uZmlybSgKICAgICAgICAn5q2k5pON5L2c5bCG5rC45LmF5Yig6Zmk6K+l6aG555uuLCDmmK/lkKbnu6fnu60/JywKICAgICAgICAn5o+Q56S6JywKICAgICAgICB7CiAgICAgICAgICBjb25maXJtQnV0dG9uVGV4dDogJ+ehruWumicsCiAgICAgICAgICBjYW5jZWxCdXR0b25UZXh0OiAn5Y+W5raIJywKICAgICAgICAgIHR5cGU6ICd3YXJuaW5nJwogICAgICAgIH0KICAgICAgKS5jYXRjaChlcnIgPT4gZXJyKQogICAgICBpZiAoY29uZmlybVJlc3VsdCAhPT0gJ2NvbmZpcm0nKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuJG1lc3NhZ2UuaW5mbygn5bey5Y+W5raI5Yig6Zmk77yBJykKICAgICAgfQogICAgICBjb25zdCB7IGRhdGE6IHJlcyB9ID0gYXdhaXQgdGhpcy4kYXBpLnByb2plY3QucHJvamVjdERlbCgKICAgICAgICB0aGlzLmRlbFByb2plY3RCb2R5CiAgICAgICkKICAgICAgaWYgKHJlcy5jb2RlICE9PSAxKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuJG1lc3NhZ2UuZXJyb3IoJ+WIoOmZpOS/oeaBr+Wksei0pe+8gScpCiAgICAgIH0KICAgICAgLy8g5o+Q56S65L+h5oGvCiAgICAgIHRoaXMuJG1lc3NhZ2Uuc3VjY2Vzcygn5Yig6Zmk5oiQ5Yqf77yBJykKICAgICAgLy8g5Yi35paw5pWw5o2uCiAgICAgIHRoaXMucHJvamVjdExpc3QoKQogICAgfQogIH0KfQo="},{"version":3,"sources":["ProjectList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqfile":"ProjectList.vue","sourceRoot":"src/views/project","sourcesContent":["<template>\n  <div>\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\"\n                   class=\"myBreadcrumb\">\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\n      <el-breadcrumb-item>项目管理</el-breadcrumb-item>\n      <el-breadcrumb-item>项目列表</el-breadcrumb-item>\n    </el-breadcrumb>\n    <el-card>\n      <div>\n        <el-row :gutter=\"30\">\n          <el-col :span=\"5\">\n            <el-button type=\"primary\"\n                       plain\n                       @click=\"goProjectInfo()\">新增项目</el-button>\n          </el-col>\n        </el-row>\n        <!-- 用户列表区域-->\n        <el-table border\n                  :data=\"projectListResList\">\n          <el-table-column width=\"50px\"\n                           label=\"uid\"\n                           prop=\"project_id\"></el-table-column>\n          <el-table-column label=\"项目名称\"\n                           prop=\"project_name\"></el-table-column>\n          <el-table-column label=\"创建人\"\n                           prop=\"create_user\"></el-table-column>\n          <el-table-column label=\"操作\"\n                           width=\"120px\">\n            <template slot-scope=\"scope\">\n              <!-- 修改按钮 -->\n              <el-tooltip class=\"item\"\n                          effect=\"dark\"\n                          content=\"修改\"\n                          placement=\"top\">\n                <el-button type=\"primary\"\n                           icon=\"el-icon-edit\"\n                           size=\"mini\"\n                           ricon=\"el-icon-edit\"\n                           circle\n                           @click=\"goProjectInfo(scope.row.project_id,scope.row.project_name)\"></el-button>\n              </el-tooltip>\n              <!-- 删除按钮 -->\n              <el-tooltip class=\"item\"\n                          effect=\"dark\"\n                          content=\"删除\"\n                          placement=\"top\">\n                <el-button type=\"danger\"\n                           icon=\"el-icon-delete\"\n                           size=\"mini\"\n                           ricon=\"el-icon-edit\"\n                           circle\n                           @click=\"removeProjectById(scope.row.project_id)\"></el-button>\n              </el-tooltip>\n            </template>\n          </el-table-column>\n        </el-table>\n        <el-pagination background\n                       :current-page=\"projectListBody.page_num\"\n                       @current-change=\"handleCurrentChange\"\n                       layout=\"prev, pager, next\"\n                       :total=\"1000\">\n        </el-pagination>\n      </div>\n    </el-card>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'ProjectList',\n  data () {\n    return {\n      projectListBody: {\n        page_num: 1\n      },\n      createProjectBody: {\n        project_id: '',\n        project_name: ''\n      },\n      enitProjectBody: {\n        project_id: '',\n        project_name: ''\n      },\n      delProjectBody: {\n        project_id: ''\n      },\n      projectListResList: {\n\n      },\n      addDialogVisible: false,\n      editDialogVisible: false,\n      addRulesForm: {\n        project_name: [\n          { required: true, message: '请输入项目名', trigger: 'blur' }\n        ]\n      }\n    }\n  },\n  created () {\n    this.projectList()\n  },\n  methods: {\n    // 点击跳转至ProjectInfo页面\n    goProjectInfo (_id, _name) {\n      this.$router.push({ path: '/project/info', query: { id: _id, name: _name } })\n    },\n    // 监听 页码值改变的事件\n    handleCurrentChange (newPage) {\n      this.projectListBody.page_num = newPage\n      this.projectList()\n    },\n    // 获取所有项目列表\n    async projectList () {\n      const { data: projectRes } = await this.$api.project.getProjectList(\n        this.projectListBody\n      )\n      if (projectRes.code !== 1) {\n        return this.$message.error('获取项目列表失败！')\n      }\n      this.projectListResList = projectRes.data\n    },\n    // 监听添加对话框关闭事件\n    addDialogClosed () {\n      this.$refs.addFormRef.resetFields()\n    },\n    // 展示编辑的对话框\n    async showEditDialog (scope) {\n      this.enitProjectBody.project_id = scope.row.project_id\n      this.enitProjectBody.project_name = scope.row.project_name\n      this.editDialogVisible = true\n    },\n    editDialogClosed () {\n      this.$refs.addFormRef.resetFields()\n    },\n    // 修改信息并提交\n    editProjectInfo () {\n      this.$refs.addFormRef.validate(async valid => {\n        if (!valid) return\n        const { data: res } = await this.$api.project.editProject(\n          this.enitProjectBody\n        )\n        if (res.code !== 1) {\n          return this.$message.error('修改信息失败！')\n        }\n        // 关闭对框\n        this.editDialogVisible = false\n        // 刷新数据\n        this.projectList()\n        // 提示信息\n        this.$message.success('更新成功！')\n      })\n    },\n    // 根据id删除\n    async removeProjectById (_id) {\n      this.delProjectBody.project_id = _id\n      // 弹窗询问是否删除\n      const confirmResult = await this.$confirm(\n        '此操作将永久删除该项目, 是否继续?',\n        '提示',\n        {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }\n      ).catch(err => err)\n      if (confirmResult !== 'confirm') {\n        return this.$message.info('已取消删除！')\n      }\n      const { data: res } = await this.$api.project.projectDel(\n        this.delProjectBody\n      )\n      if (res.code !== 1) {\n        return this.$message.error('删除信息失败！')\n      }\n      // 提示信息\n      this.$message.success('删除成功！')\n      // 刷新数据\n      this.projectList()\n    }\n  }\n}\n</script>\n\n<style lang=\"less\" scoped></style>\n"]}]}