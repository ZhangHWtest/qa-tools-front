{"remainingRequest":"/Users/zhwtest/Desktop/VueProjects/flask_api_ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhwtest/Desktop/VueProjects/flask_api_ui/src/views/interface/components/InterfaceTable.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zhwtest/Desktop/VueProjects/flask_api_ui/src/views/interface/components/InterfaceTable.vue","mtime":1585987504383},{"path":"/Users/zhwtest/Desktop/VueProjects/flask_api_ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhwtest/Desktop/VueProjects/flask_api_ui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zhwtest/Desktop/VueProjects/flask_api_ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhwtest/Desktop/VueProjects/flask_api_ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBjcmVhdGVkICgpIHsKICAgIHRoaXMuaW50ZXJmYWNlTGlzdE1ldGhvZCgpCiAgfSwKICBkYXRhICgpIHsKICAgIHJldHVybiB7CiAgICAgIGludGVyZmFjZUxpc3Q6IFtdLAogICAgICByZW1vdmVpbnRlcmZhY2U6IHsKICAgICAgICBpbnRlcmZhY2VfaWQ6ICcnCiAgICAgIH0sCiAgICAgIEludGVyZmFjZUJvZHk6IHsKICAgICAgICBwcm9qZWN0X2lkOiAnJywKICAgICAgICBtb2RlbF9pZDogJycsCiAgICAgICAgcGFnZV9udW06IDEKICAgICAgfQogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgYXN5bmMgaW50ZXJmYWNlTGlzdE1ldGhvZCAoKSB7CiAgICAgIGNvbnN0IHsgZGF0YTogcmVzcG9uc2VCb2R5IH0gPSBhd2FpdCB0aGlzLiRhcGkubXlpbnRlcmZhY2UuZ2V0SW50ZXJmYWNlTGlzdCgKICAgICAgICB0aGlzLkludGVyZmFjZUJvZHkKICAgICAgKQogICAgICBpZiAocmVzcG9uc2VCb2R5LmNvZGUgPT09IDEpIHsKICAgICAgICB0aGlzLmludGVyZmFjZUxpc3QgPSByZXNwb25zZUJvZHkuZGF0YQogICAgICB9CiAgICB9LAogICAgYXN5bmMgcmVtb3ZlSW50ZXJmYWNlQnlJZCAoaWQpIHsKICAgICAgdGhpcy5yZW1vdmVpbnRlcmZhY2UuaW50ZXJmYWNlX2lkID0gaWQKICAgICAgY29uc3QgeyBkYXRhOiByZXNwb25zZUJvZHkgfSA9IGF3YWl0IHRoaXMuJGFwaS5teWludGVyZmFjZS5kZWxJbnRlcmZhY2VNZXRob2QoCiAgICAgICAgdGhpcy5yZW1vdmVpbnRlcmZhY2UKICAgICAgKQogICAgICBpZiAocmVzcG9uc2VCb2R5LmNvZGUgPT09IDEpIHsKICAgICAgICB0aGlzLmludGVyZmFjZUxpc3RNZXRob2QoKQogICAgICB9CiAgICB9LAogICAgLy8g54K55Ye76Lez6L2s6IezSW50ZXJmYWNlSW5mb+mhtemdogogICAgZ29JbnRlcmZhY2VJbmZvIChfaWQpIHsKICAgICAgdGhpcy4kcm91dGVyLnB1c2goeyBwYXRoOiAnL2ludGVyZmFjZS9pbmZvJyB9KQogICAgICB3aW5kb3cuc2Vzc2lvblN0b3JhZ2Uuc2V0SXRlbSgnaW50ZXJmYWNlX2lkJywgX2lkKQogICAgICAvLyB0aGlzLiRzdG9yZS5jb21taXQoJ3NldEludGVyZmFjZUlkJywgX2lkKQogICAgfSwKICAgIC8vIOebkeWQrCDpobXnoIHlgLzmlLnlj5jnmoTkuovku7YKICAgIGhhbmRsZUN1cnJlbnRDaGFuZ2UgKG5ld1BhZ2UpIHsKICAgICAgdGhpcy5JbnRlcmZhY2VCb2R5LnBhZ2VfbnVtID0gbmV3UGFnZQogICAgICB0aGlzLmludGVyZmFjZUxpc3RNZXRob2QoKQogICAgfQogIH0KfQo="},{"version":3,"sources":["InterfaceTable.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"InterfaceTable.vue","sourceRoot":"src/views/interface/components","sourcesContent":["<template>\n  <div>\n    <!-- 模块列表区域-->\n    <el-table class=\"model_table\"\n              border\n              :data=\"interfaceList\">\n      <el-table-column width=\"70px\"\n                       label=\"id\"\n                       prop=\"interface_id\"></el-table-column>\n      <el-table-column label=\"项目名称\"\n                       prop=\"project_name\"></el-table-column>\n      <el-table-column label=\"模块名称\"\n                       prop=\"model_name\"></el-table-column>\n      <el-table-column label=\"接口名称\"\n                       prop=\"interface_name\"></el-table-column>\n      <el-table-column label=\"接口类型\"\n                       prop=\"interface_type\"></el-table-column>\n      <el-table-column label=\"方法\"\n                       prop=\"method\"></el-table-column>\n      <el-table-column label=\"路径\"\n                       prop=\"path\"></el-table-column>\n      <el-table-column label=\"创建人\"\n                       prop=\"create_user\"></el-table-column>\n      <el-table-column label=\"操作\"\n                       width=\"120px\">\n        <template slot-scope=\"scope\">\n          <!-- 修改按钮 -->\n          <el-tooltip class=\"item\"\n                      effect=\"dark\"\n                      content=\"修改\"\n                      placement=\"top\">\n            <el-button type=\"primary\"\n                       icon=\"el-icon-edit\"\n                       size=\"mini\"\n                       ricon=\"el-icon-edit\"\n                       circle\n                       @click=\"goInterfaceInfo(scope.row.interface_id)\"></el-button>\n          </el-tooltip>\n          <!-- 删除按钮 -->\n          <el-tooltip class=\"item\"\n                      effect=\"dark\"\n                      content=\"删除\"\n                      placement=\"top\">\n            <el-button type=\"danger\"\n                       icon=\"el-icon-delete\"\n                       size=\"mini\"\n                       ricon=\"el-icon-edit\"\n                       circle\n                       @click=\"removeInterfaceById(scope.row.interface_id)\"></el-button>\n          </el-tooltip>\n        </template>\n      </el-table-column>\n    </el-table>\n    <el-pagination background\n                   :current-page=\"InterfaceBody.page_num\"\n                   @current-change=\"handleCurrentChange\"\n                   layout=\"prev, pager, next\"\n                   :total=\"1000\">\n    </el-pagination>\n  </div>\n</template>\n<script>\nexport default {\n  created () {\n    this.interfaceListMethod()\n  },\n  data () {\n    return {\n      interfaceList: [],\n      removeinterface: {\n        interface_id: ''\n      },\n      InterfaceBody: {\n        project_id: '',\n        model_id: '',\n        page_num: 1\n      }\n    }\n  },\n  methods: {\n    async interfaceListMethod () {\n      const { data: responseBody } = await this.$api.myinterface.getInterfaceList(\n        this.InterfaceBody\n      )\n      if (responseBody.code === 1) {\n        this.interfaceList = responseBody.data\n      }\n    },\n    async removeInterfaceById (id) {\n      this.removeinterface.interface_id = id\n      const { data: responseBody } = await this.$api.myinterface.delInterfaceMethod(\n        this.removeinterface\n      )\n      if (responseBody.code === 1) {\n        this.interfaceListMethod()\n      }\n    },\n    // 点击跳转至InterfaceInfo页面\n    goInterfaceInfo (_id) {\n      this.$router.push({ path: '/interface/info' })\n      window.sessionStorage.setItem('interface_id', _id)\n      // this.$store.commit('setInterfaceId', _id)\n    },\n    // 监听 页码值改变的事件\n    handleCurrentChange (newPage) {\n      this.InterfaceBody.page_num = newPage\n      this.interfaceListMethod()\n    }\n  }\n}\n</script>\n<style lang=\"less\" scoped>\n.seachName {\n  font-size: 14px;\n  color: #606266;\n}\n</style>\n"]}]}