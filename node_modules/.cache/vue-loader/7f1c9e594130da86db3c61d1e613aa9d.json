{"remainingRequest":"/Users/zhwtest/Desktop/VueProjects/flask_api_ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhwtest/Desktop/VueProjects/flask_api_ui/src/views/project/ProjectList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zhwtest/Desktop/VueProjects/flask_api_ui/src/views/project/ProjectList.vue","mtime":1585312857401},{"path":"/Users/zhwtest/Desktop/VueProjects/flask_api_ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhwtest/Desktop/VueProjects/flask_api_ui/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhwtest/Desktop/VueProjects/flask_api_ui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zhwtest/Desktop/VueProjects/flask_api_ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhwtest/Desktop/VueProjects/flask_api_ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhICgpIHsKICAgIHJldHVybiB7CiAgICAgIHByb2plY3RMaXN0Qm9keTogewogICAgICAgIHBhZ2VfbnVtOiAxCiAgICAgIH0sCiAgICAgIGNyZWF0ZVByb2plY3RCb2R5OiB7CiAgICAgICAgcHJvamVjdF9pZDogJycsCiAgICAgICAgcHJvamVjdF9uYW1lOiAnJwogICAgICB9LAogICAgICBlbml0UHJvamVjdEJvZHk6IHsKICAgICAgICBwcm9qZWN0X2lkOiAnJywKICAgICAgICBwcm9qZWN0X25hbWU6ICcnCiAgICAgIH0sCiAgICAgIGRlbFByb2plY3RCb2R5OiB7CiAgICAgICAgcHJvamVjdF9pZDogJycKICAgICAgfSwKICAgICAgcHJvamVjdExpc3RSZXNMaXN0OiB7fSwKICAgICAgYWRkRGlhbG9nVmlzaWJsZTogZmFsc2UsCiAgICAgIGVkaXREaWFsb2dWaXNpYmxlOiBmYWxzZSwKICAgICAgYWRkUnVsZXNGb3JtOiB7CiAgICAgICAgcHJvamVjdF9uYW1lOiBbCiAgICAgICAgICB7IHJlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiAn6K+36L6T5YWl6aG555uu5ZCNJywgdHJpZ2dlcjogJ2JsdXInIH0KICAgICAgICBdCiAgICAgIH0KICAgIH0KICB9LAogIGNyZWF0ZWQgKCkgewogICAgdGhpcy5wcm9qZWN0TGlzdCgpCiAgfSwKICBtZXRob2RzOiB7CiAgICAvLyDojrflj5bmiYDmnInpobnnm67liJfooagKICAgIGFzeW5jIHByb2plY3RMaXN0ICgpIHsKICAgICAgY29uc3QgeyBkYXRhOiBwcm9qZWN0UmVzIH0gPSBhd2FpdCB0aGlzLiRhcGkucHJvamVjdC5nZXRQcm9qZWN0TGlzdCgKICAgICAgICB0aGlzLnByb2plY3RMaXN0Qm9keQogICAgICApCiAgICAgIGNvbnNvbGUubG9nKHByb2plY3RSZXMpCiAgICAgIGlmIChwcm9qZWN0UmVzLmNvZGUgIT09IDEpIHsKICAgICAgICByZXR1cm4gdGhpcy4kbWVzc2FnZS5lcnJvcign6I635Y+W55So5oi35YiX6KGo5aSx6LSl77yBJykKICAgICAgfQogICAgICB0aGlzLnByb2plY3RMaXN0UmVzTGlzdCA9IHByb2plY3RSZXMuZGF0YQogICAgfSwKICAgIC8vIOebkeWQrOa3u+WKoOeUqOaIt+WvueivneahhuWFs+mXreS6i+S7tgogICAgYWRkRGlhbG9nQ2xvc2VkICgpIHsKICAgICAgdGhpcy4kcmVmcy5hZGRGb3JtUmVmLnJlc2V0RmllbGRzKCkKICAgIH0sCiAgICAvLyDngrnlh7vigJ3noa7orqTigJzmj5DkuqTliY3nmoTpooTmoKHpqowKICAgIGNyZWF0ZVByb2plY3QgKCkgewogICAgICB0aGlzLiRyZWZzLmFkZEZvcm1SZWYudmFsaWRhdGUoYXN5bmMgdmFsaWQgPT4gewogICAgICAgIGlmICghdmFsaWQpIHJldHVybgogICAgICAgIGNvbnN0IHsgZGF0YTogcmVzIH0gPSBhd2FpdCB0aGlzLiRhcGkucHJvamVjdC5hZGRQcm9qZWN0KAogICAgICAgICAgdGhpcy5jcmVhdGVQcm9qZWN0Qm9keQogICAgICAgICkKICAgICAgICBpZiAocmVzLmNvZGUgIT09IDEpIHsKICAgICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IoJ+a3u+WKoOeUqOaIt+Wksei0pe+8gScpCiAgICAgICAgfQogICAgICAgIHRoaXMuJG1lc3NhZ2Uuc3VjY2Vzcygn5re75Yqg55So5oi35oiQ5Yqf77yBJykKICAgICAgICAvLyDmt7vliqDmiJDlip/lhbPpl63lr7nor53moYYKICAgICAgICB0aGlzLmFkZERpYWxvZ1Zpc2libGUgPSBmYWxzZQogICAgICAgIC8vIOmHjeaWsOiOt+WPluWIl+ihqOaVsOaNrgogICAgICAgIHRoaXMucHJvamVjdExpc3QoKQogICAgICB9KQogICAgfSwKICAgIC8vIOWxleekuue8lui+keeahOWvueivneahhgogICAgYXN5bmMgc2hvd0VkaXREaWFsb2cgKHNjb3BlKSB7CiAgICAgIGNvbnNvbGUubG9nKHNjb3BlKQogICAgICB0aGlzLmVuaXRQcm9qZWN0Qm9keS5wcm9qZWN0X2lkID0gc2NvcGUucm93LnByb2plY3RfaWQKICAgICAgdGhpcy5lbml0UHJvamVjdEJvZHkucHJvamVjdF9uYW1lID0gc2NvcGUucm93LnByb2plY3RfbmFtZQogICAgICB0aGlzLmVkaXREaWFsb2dWaXNpYmxlID0gdHJ1ZQogICAgfSwKICAgIGVkaXREaWFsb2dDbG9zZWQgKCkgewogICAgICB0aGlzLiRyZWZzLmFkZEZvcm1SZWYucmVzZXRGaWVsZHMoKQogICAgfSwKICAgIC8vIOS/ruaUueS/oeaBr+W5tuaPkOS6pAogICAgZWRpdFByb2plY3RJbmZvICgpIHsKICAgICAgdGhpcy4kcmVmcy5hZGRGb3JtUmVmLnZhbGlkYXRlKGFzeW5jIHZhbGlkID0+IHsKICAgICAgICBpZiAoIXZhbGlkKSByZXR1cm4KICAgICAgICBjb25zdCB7IGRhdGE6IHJlcyB9ID0gYXdhaXQgdGhpcy4kYXBpLnByb2plY3QuZWRpdFByb2plY3QoCiAgICAgICAgICB0aGlzLmVuaXRQcm9qZWN0Qm9keQogICAgICAgICkKICAgICAgICBpZiAocmVzLmNvZGUgIT09IDEpIHsKICAgICAgICAgIHJldHVybiB0aGlzLiRtZXNzYWdlLmVycm9yKCfkv67mlLnkv6Hmga/lpLHotKXvvIEnKQogICAgICAgIH0KICAgICAgICAvLyDlhbPpl63lr7nmoYYKICAgICAgICB0aGlzLmVkaXREaWFsb2dWaXNpYmxlID0gZmFsc2UKICAgICAgICAvLyDliLfmlrDmlbDmja4KICAgICAgICB0aGlzLnByb2plY3RMaXN0KCkKICAgICAgICAvLyDmj5DnpLrkv6Hmga8KICAgICAgICB0aGlzLiRtZXNzYWdlLnN1Y2Nlc3MoJ+abtOaWsOaIkOWKn++8gScpCiAgICAgIH0pCiAgICB9LAogICAgLy8g5qC55o2uaWTliKDpmaQKICAgIGFzeW5jIHJlbW92ZVByb2plY3RCeUlkIChwcm9qZWN0X2lkKSB7CiAgICAgIHRoaXMuZGVsUHJvamVjdEJvZHkucHJvamVjdF9pZCA9IHByb2plY3RfaWQKICAgICAgLy8g5by556qX6K+i6Zeu5piv5ZCm5Yig6ZmkCiAgICAgIGNvbnN0IGNvbmZpcm1SZXN1bHQgPSBhd2FpdCB0aGlzLiRjb25maXJtKAogICAgICAgICfmraTmk43kvZzlsIbmsLjkuYXliKDpmaTor6XnlKjmiLcsIOaYr+WQpue7p+e7rT8nLAogICAgICAgICfmj5DnpLonLAogICAgICAgIHsKICAgICAgICAgIGNvbmZpcm1CdXR0b25UZXh0OiAn56Gu5a6aJywKICAgICAgICAgIGNhbmNlbEJ1dHRvblRleHQ6ICflj5bmtognLAogICAgICAgICAgdHlwZTogJ3dhcm5pbmcnCiAgICAgICAgfQogICAgICApLmNhdGNoKGVyciA9PiBlcnIpCiAgICAgIGlmIChjb25maXJtUmVzdWx0ICE9PSAnY29uZmlybScpIHsKICAgICAgICByZXR1cm4gdGhpcy4kbWVzc2FnZS5pbmZvKCflt7Llj5bmtojliKDpmaTvvIEnKQogICAgICB9CiAgICAgIGNvbnN0IHsgZGF0YTogcmVzIH0gPSBhd2FpdCB0aGlzLiRhcGkucHJvamVjdC5wcm9qZWN0RGVsKAogICAgICAgIHRoaXMuZGVsUHJvamVjdEJvZHkKICAgICAgKQogICAgICBpZiAocmVzLmNvZGUgIT09IDEpIHsKICAgICAgICByZXR1cm4gdGhpcy4kbWVzc2FnZS5lcnJvcign5Yig6Zmk5L+h5oGv5aSx6LSl77yBJykKICAgICAgfQogICAgICAvLyDmj5DnpLrkv6Hmga8KICAgICAgdGhpcy4kbWVzc2FnZS5zdWNjZXNzKCfliKDpmaTmiJDlip/vvIEnKQogICAgICAvLyDliLfmlrDmlbDmja4KICAgICAgdGhpcy5wcm9qZWN0TGlzdCgpCiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["ProjectList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqfile":"ProjectList.vue","sourceRoot":"src/views/project","sourcesContent":["<template>\n  <div>\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\" class=\"myBreadcrumb\">\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\n      <el-breadcrumb-item>项目管理</el-breadcrumb-item>\n      <el-breadcrumb-item>项目列表</el-breadcrumb-item>\n    </el-breadcrumb>\n    <el-card>\n      <div>\n        <el-row :gutter=\"30\">\n          <el-col :span=\"5\">\n            <el-button type=\"primary\" plain @click=\"addDialogVisible = true\"\n              >新增项目</el-button\n            >\n          </el-col>\n        </el-row>\n        <!-- 用户列表区域-->\n        <el-table border :data=\"projectListResList\">\n          <el-table-column\n            width=\"50px\"\n            label=\"uid\"\n            prop=\"project_id\"\n          ></el-table-column>\n          <el-table-column\n            label=\"项目名称\"\n            prop=\"project_name\"\n          ></el-table-column>\n          <el-table-column label=\"创建人\" prop=\"create_user\"></el-table-column>\n          <el-table-column label=\"操作\" width=\"120px\">\n            <template slot-scope=\"scope\">\n              <!-- 修改按钮 -->\n              <el-tooltip\n                class=\"item\"\n                effect=\"dark\"\n                content=\"修改\"\n                placement=\"top\"\n              >\n                <el-button\n                  type=\"primary\"\n                  icon=\"el-icon-edit\"\n                  size=\"mini\"\n                  ricon=\"el-icon-edit\"\n                  circle\n                  @click=\"showEditDialog(scope)\"\n                ></el-button>\n              </el-tooltip>\n              <!-- 删除按钮 -->\n              <el-tooltip\n                class=\"item\"\n                effect=\"dark\"\n                content=\"删除\"\n                placement=\"top\"\n              >\n                <el-button\n                  type=\"danger\"\n                  icon=\"el-icon-delete\"\n                  size=\"mini\"\n                  ricon=\"el-icon-edit\"\n                  circle\n                  @click=\"removeProjectById(scope.row.project_id)\"\n                ></el-button>\n              </el-tooltip>\n            </template>\n          </el-table-column>\n        </el-table>\n      </div>\n    </el-card>\n    <!-- 添加项目对话框-->\n    <el-dialog\n      title=\"添加项目\"\n      :visible.sync=\"addDialogVisible\"\n      width=\"50%\"\n      @close=\"addDialogClosed\"\n    >\n      <!-- 内容主体区域-->\n      <el-form\n        ref=\"addFormRef\"\n        :model=\"createProjectBody\"\n        :rules=\"addRulesForm\"\n        label-width=\"85px\"\n      >\n        <el-form-item label=\"项目名称\" prop=\"project_name\">\n          <el-input v-model=\"createProjectBody.project_name\"></el-input>\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"addDialogVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"createProject()\">确 定</el-button>\n      </span>\n    </el-dialog>\n    <!-- 修改项目对话框-->\n    <el-dialog\n      title=\"修改项目\"\n      :visible.sync=\"editDialogVisible\"\n      width=\"50%\"\n      @close=\"editDialogClosed\"\n    >\n      <!-- 内容主体区域-->\n      <el-form\n        ref=\"addFormRef\"\n        :model=\"enitProjectBody\"\n        :rules=\"addRulesForm\"\n        label-width=\"85px\"\n      >\n        <el-form-item label=\"项目名称\" prop=\"project_name\">\n          <el-input v-model=\"enitProjectBody.project_name\"></el-input>\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"editDialogVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"editProjectInfo()\">确 定</el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      projectListBody: {\n        page_num: 1\n      },\n      createProjectBody: {\n        project_id: '',\n        project_name: ''\n      },\n      enitProjectBody: {\n        project_id: '',\n        project_name: ''\n      },\n      delProjectBody: {\n        project_id: ''\n      },\n      projectListResList: {},\n      addDialogVisible: false,\n      editDialogVisible: false,\n      addRulesForm: {\n        project_name: [\n          { required: true, message: '请输入项目名', trigger: 'blur' }\n        ]\n      }\n    }\n  },\n  created () {\n    this.projectList()\n  },\n  methods: {\n    // 获取所有项目列表\n    async projectList () {\n      const { data: projectRes } = await this.$api.project.getProjectList(\n        this.projectListBody\n      )\n      console.log(projectRes)\n      if (projectRes.code !== 1) {\n        return this.$message.error('获取用户列表失败！')\n      }\n      this.projectListResList = projectRes.data\n    },\n    // 监听添加用户对话框关闭事件\n    addDialogClosed () {\n      this.$refs.addFormRef.resetFields()\n    },\n    // 点击”确认“提交前的预校验\n    createProject () {\n      this.$refs.addFormRef.validate(async valid => {\n        if (!valid) return\n        const { data: res } = await this.$api.project.addProject(\n          this.createProjectBody\n        )\n        if (res.code !== 1) {\n          this.$message.error('添加用户失败！')\n        }\n        this.$message.success('添加用户成功！')\n        // 添加成功关闭对话框\n        this.addDialogVisible = false\n        // 重新获取列表数据\n        this.projectList()\n      })\n    },\n    // 展示编辑的对话框\n    async showEditDialog (scope) {\n      console.log(scope)\n      this.enitProjectBody.project_id = scope.row.project_id\n      this.enitProjectBody.project_name = scope.row.project_name\n      this.editDialogVisible = true\n    },\n    editDialogClosed () {\n      this.$refs.addFormRef.resetFields()\n    },\n    // 修改信息并提交\n    editProjectInfo () {\n      this.$refs.addFormRef.validate(async valid => {\n        if (!valid) return\n        const { data: res } = await this.$api.project.editProject(\n          this.enitProjectBody\n        )\n        if (res.code !== 1) {\n          return this.$message.error('修改信息失败！')\n        }\n        // 关闭对框\n        this.editDialogVisible = false\n        // 刷新数据\n        this.projectList()\n        // 提示信息\n        this.$message.success('更新成功！')\n      })\n    },\n    // 根据id删除\n    async removeProjectById (project_id) {\n      this.delProjectBody.project_id = project_id\n      // 弹窗询问是否删除\n      const confirmResult = await this.$confirm(\n        '此操作将永久删除该用户, 是否继续?',\n        '提示',\n        {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }\n      ).catch(err => err)\n      if (confirmResult !== 'confirm') {\n        return this.$message.info('已取消删除！')\n      }\n      const { data: res } = await this.$api.project.projectDel(\n        this.delProjectBody\n      )\n      if (res.code !== 1) {\n        return this.$message.error('删除信息失败！')\n      }\n      // 提示信息\n      this.$message.success('删除成功！')\n      // 刷新数据\n      this.projectList()\n    }\n  }\n}\n</script>\n\n<style lang=\"less\" scoped></style>\n"]}]}