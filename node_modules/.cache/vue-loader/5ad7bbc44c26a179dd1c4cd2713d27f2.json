{"remainingRequest":"/Users/zhwtest/Desktop/VueProjects/flask_api_ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhwtest/Desktop/VueProjects/flask_api_ui/src/views/interface/components/AddInterface.vue?vue&type=style&index=0&id=1f7ce511&lang=less&scoped=true&","dependencies":[{"path":"/Users/zhwtest/Desktop/VueProjects/flask_api_ui/src/views/interface/components/AddInterface.vue","mtime":1585987388481},{"path":"/Users/zhwtest/Desktop/VueProjects/flask_api_ui/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhwtest/Desktop/VueProjects/flask_api_ui/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/zhwtest/Desktop/VueProjects/flask_api_ui/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/zhwtest/Desktop/VueProjects/flask_api_ui/node_modules/less-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhwtest/Desktop/VueProjects/flask_api_ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhwtest/Desktop/VueProjects/flask_api_ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouZ29JbnRlcmZhY2VMaXN0LWJ1dHRvbiB7CiAgZmxvYXQ6IHJpZ2h0OwogIG1hcmdpbi1ib3R0b206IDI1cHg7CiAgbWFyZ2luLXJpZ2h0OiA2MHB4Owp9Ci5pbnRlcmZhY2UtaW5mbyB7CiAgd2lkdGg6IDY1JTsKICBtYXJnaW4tbGVmdDogMTAwcHg7CiAgbWFyZ2luLWJvdHRvbTogMTVweDsKICBwYWRkaW5nLXRvcDogMTVweDsKICBwYWRkaW5nLWJvdHRvbTogMTVweDsKICBwYWRkaW5nLWxlZnQ6IDUwcHg7CiAgcGFkZGluZy1yaWdodDogNTBweDsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWVlOwp9Ci5pbnRlcmZhY2UtdGl0bGUtc3R5bGUgewogIGJvcmRlci1sZWZ0OiAzcHggc29saWQgIzIzOTVmMTsKICBwYWRkaW5nLWxlZnQ6IDhweDsKICBtYXJnaW4tYm90dG9tOiAyMHB4OwogIG1hcmdpbi1sZWZ0OiAxNXB4Owp9Ci5nb1Byb2plY3QtZGlhbG9nLWZvb3RlciB7CiAgcG9zaXRpb246IHJlbGF0aXZlOwogIHRvcDogNTAlOwogIGxlZnQ6IDUwJTsKICBtYXJnaW46IDAgMCAwIC0xMDBweDsKfQouZ29Qcm9qZWN0LWRpYWxvZy1mb290ZXItaW5mby1wYXJhbSB7CiAgcG9zaXRpb246IHJlbGF0aXZlOwogIHRvcDogNTAlOwogIGxlZnQ6IDQ1JTsKfQoudG9wU3RlcHMgewogIG1hcmdpbi1sZWZ0OiAyMHB4OwogIG1hcmdpbi1yaWdodDogMjBweDsKfQoudG9wU3RlcHNDYXJkIHsKICBtYXJnaW4tYm90dG9tOiA1cHg7Cn0KLmhlYWRlcl9pbnB1dCB7CiAgbWFyZ2luLWJvdHRvbTogMTVweDsKfQouaW50ZXJmYWNlaW5mby1yZXNwb25zZS1qc29uIHsKICBtYXJnaW4tYm90dG9tOiAxNXB4Owp9Cg=="},{"version":3,"sources":["AddInterface.vue"],"names":[],"mappingssjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AddInterface.vue","sourceRoot":"src/views/interface/components","sourcesContent":["<template>\n  <div>\n    <!-- 面包屑导航区域-->\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\"\n                   class=\"myBreadcrumb\">\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\n      <el-breadcrumb-item :to=\"{ path: '/interface/list' }\">接口列表</el-breadcrumb-item>\n      <el-breadcrumb-item>接口详情</el-breadcrumb-item>\n    </el-breadcrumb>\n    <!-- 基本信息区域-->\n    <el-card>\n      <h2 class=\"interface-title-style\">基本信息:</h2>\n      <div class=\"interface-info\">\n        <el-form ref=\"addFormRef\"\n                 :model=\"createInterfaceBody\"\n                 :rules=\"addRulesForm\"\n                 label-width=\"100px\">\n          <el-form-item label=\"项目名称:\"\n                        v-show=\"formProjectAndModel\"\n                        prop=\"project_name\">\n            <el-select v-model=\"projectList.project_id\"\n                       placeholder=\"请选择项目\"\n                       @change=\"addInterfaceGetModelList(projectList.project_id)\">\n              <el-option v-for=\"item in projectList\"\n                         :key=\"item.project_id\"\n                         :label=\"item.project_name\"\n                         :value=\"item.project_id\">\n              </el-option>\n            </el-select>\n          </el-form-item>\n          <el-form-item label=\"模块名称:\"\n                        v-show=\"formProjectAndModel\"\n                        prop=\"model_name\">\n            <el-select v-model=\"modelList.model_id\"\n                       placeholder=\"请选择模块\">\n              <el-option v-for=\"item in modelList.list\"\n                         :key=\"item.model_id\"\n                         :label=\"item.model_name\"\n                         :value=\"item.model_id\">\n              </el-option>\n            </el-select>\n          </el-form-item>\n          <el-form-item label=\"接口名称:\"\n                        prop=\"interface_name\">\n            <el-input class=\"interface_name\"\n                      placeholder=\"请输接口名称\"\n                      v-model=\"createInterfaceBody.interface_name\"></el-input>\n          </el-form-item>\n\n          <el-form-item label=\"接口类型:\"\n                        prop=\"interface_type\">\n            <el-select v-model=\"createInterfaceBody.interface_type\"\n                       placeholder=\"请选择接口类型\">\n              <el-option v-for=\"item in interface_type_options\"\n                         :key=\"item.value\"\n                         :label=\"item.label\"\n                         :value=\"item.value\">\n              </el-option>\n            </el-select>\n          </el-form-item>\n          <el-form-item label=\"请求类型:\"\n                        prop=\"method\">\n            <el-select v-model=\"createInterfaceBody.method\"\n                       placeholder=\"请选择请求类型\">\n              <el-option v-for=\"item in method_options\"\n                         :key=\"item.value\"\n                         :label=\"item.label\"\n                         :value=\"item.value\">\n              </el-option>\n            </el-select>\n          </el-form-item>\n          <el-form-item label=\"请求路径:\"\n                        prop=\"path\">\n            <el-input class=\"project_name_input\"\n                      placeholder=\"请输入请求路径\"\n                      v-model=\"createInterfaceBody.path\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"接口描述:\">\n            <el-input class=\"project_name_input\"\n                      type=\"textarea\"\n                      placeholder=\"请输入描述信息\"\n                      v-model=\"createInterfaceBody.interface_desc\"></el-input>\n          </el-form-item>\n        </el-form>\n        <span slot=\"footer\"\n              class=\"goProject-dialog-footer-info-param\">\n          <el-tooltip class=\"item\"\n                      effect=\"dark\"\n                      content=\"提交\"\n                      placement=\"top\">\n            <el-button type=\"success\"\n                       icon=\"el-icon-plus\"\n                       size=\"small\"\n                       circle\n                       v-show=\"createInterfaceButton\"\n                       @click=\"createInterface()\"></el-button>\n          </el-tooltip>\n        </span>\n      </div>\n    </el-card>\n    <el-card>\n      <h2 class=\"interface-title-style\">请求参数:</h2>\n      <div class=\"interface-info\">\n        <el-tabs type=\"border-card\">\n          <el-tab-pane label=\"param\">\n            <div>\n              <el-table border\n                        :data=\"paramsList\">\n                <el-table-column label=\"参数id\"\n                                 prop=\"param_id\"></el-table-column>\n                <el-table-column label=\"参数名称\"\n                                 prop=\"param_name\"></el-table-column>\n                <el-table-column label=\"是否必填\"\n                                 prop=\"is_necessary\">\n                  <template slot-scope=\"scope\">\n                    <font v-if=\"scope.row.is_necessary === 0\"\n                          color=\"#67C23A\">必需</font>\n                    <font v-else\n                          color=\"#F56C6C\">非必需</font>\n                  </template>\n                </el-table-column>\n                <el-table-column label=\"参数示例\"\n                                 prop=\"default\"></el-table-column>\n                <el-table-column label=\"备注\"\n                                 prop=\"param_desc\"></el-table-column>\n                <el-table-column label=\"操作\">\n                  <template slot-scope=\"scope\">\n                    <!-- 修改按钮 -->\n                    <el-tooltip class=\"item\"\n                                effect=\"dark\"\n                                content=\"修改\"\n                                placement=\"top\">\n                      <el-button type=\"primary\"\n                                 icon=\"el-icon-edit\"\n                                 size=\"mini\"\n                                 ricon=\"el-icon-edit\"\n                                 circle\n                                 @click=\"showEditInterfaceParamDialog(scope.row)\"></el-button>\n                    </el-tooltip>\n                    <el-tooltip class=\"item\"\n                                effect=\"dark\"\n                                content=\"删除\"\n                                placement=\"top\">\n                      <el-button type=\"danger\"\n                                 icon=\"el-icon-delete\"\n                                 size=\"mini\"\n                                 ricon=\"el-icon-edit\"\n                                 circle\n                                 @click=\"removeInterfaceParamById(scope.row.param_id)\"></el-button>\n                    </el-tooltip>\n                  </template>\n                </el-table-column>\n              </el-table>\n              <span slot=\"footer\"\n                    class=\"goProject-dialog-footer-info-param\">\n                <el-tooltip class=\"item\"\n                            effect=\"dark\"\n                            content=\"提交\"\n                            placement=\"top\">\n                  <el-button type=\"success\"\n                             icon=\"el-icon-plus\"\n                             size=\"small\"\n                             circle\n                             @click=\"showCreateInterfaceParamDialog()\"></el-button>\n                </el-tooltip>\n              </span>\n            </div>\n          </el-tab-pane>\n          <el-tab-pane label=\"header\">\n            <div>\n              <el-input class=\"header_input\"\n                        type=\"textarea\"\n                        placeholder=\"示例：{'Content-Type':'application/x-www-form-urlencoded'}\"\n                        v-model=\"createHeader.header\"></el-input>\n              <span slot=\"footer\"\n                    class=\"goProject-dialog-footer-info-param\">\n                <el-tooltip class=\"item\"\n                            effect=\"dark\"\n                            content=\"提交\"\n                            placement=\"top\">\n                  <el-button type=\"success\"\n                             icon=\"el-icon-plus\"\n                             size=\"small\"\n                             circle\n                             @click=\"createInterfaceHeader()\"></el-button>\n                </el-tooltip>\n              </span>\n            </div>\n          </el-tab-pane>\n        </el-tabs>\n      </div>\n    </el-card>\n    <el-card>\n      <h2 class=\"interface-title-style\">返回数据设置:</h2>\n      <div class=\"interface-info\">\n        <el-tabs type=\"border-card\">\n          <el-tab-pane label=\"JSON\">\n            <div>\n              <el-input class=\"interfaceinfo-response-json\"\n                        type=\"textarea\"\n                        :autosize=\"{ minRows: 2, maxRows: 6}\"\n                        placeholder='示例：{\"test\":1}'\n                        v-model=\"createResponse.response\">\n              </el-input>\n              <span slot=\"footer\"\n                    class=\"goProject-dialog-footer-info-param\">\n                <el-tooltip class=\"item\"\n                            effect=\"dark\"\n                            content=\"提交\"\n                            placement=\"top\">\n                  <el-button type=\"success\"\n                             icon=\"el-icon-plus\"\n                             size=\"small\"\n                             circle\n                             @click=\"createInterfaceResponse()\"></el-button>\n                </el-tooltip>\n              </span>\n            </div>\n          </el-tab-pane>\n        </el-tabs>\n      </div>\n    </el-card>\n\n    <el-card>\n      <el-button class=\"goInterfaceList-button\"\n                 @click=\"goInterfaceList()\">返 回</el-button>\n    </el-card>\n    <!-- 添加接口对话框-->\n    <el-dialog title=\"添加接口参数\"\n               :visible.sync=\"addDialogVisible\"\n               width=\"50%\"\n               @close=\"addDialogClosed\">\n      <!-- 内容主体区域-->\n      <el-form ref=\"addFormRef\"\n               :model=\"createParams\"\n               label-width=\"70px\">\n        <el-form-item label=\"参数名称\">\n          <el-input v-model=\"createParams.param_name\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"是否必需\">\n          <template>\n            <el-radio v-model=\"createParams.is_necessary\"\n                      label=\"0\">必需</el-radio>\n            <el-radio v-model=\"createParams.is_necessary\"\n                      label=\"1\">非必需</el-radio>\n          </template>\n        </el-form-item>\n        <el-form-item label=\"参数描述\">\n          <el-input v-model=\"createParams.param_desc\"></el-input>\n        </el-form-item>\n\n        <el-form-item label=\"参数示例\">\n          <el-input v-model=\"createParams.default\"></el-input>\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\"\n            class=\"dialog-footer\">\n        <el-button @click=\"addDialogVisible = false\">取 消</el-button>\n        <el-button type=\"primary\"\n                   @click=\"createInterfaceParam ()\">确 定</el-button>\n      </span>\n    </el-dialog>\n    <!-- 编辑接口对话框-->\n    <el-dialog title=\"添加接口参数\"\n               :visible.sync=\"editDialogVisible\"\n               width=\"50%\">\n      <!-- 内容主体区域-->\n      <el-form ref=\"addFormRef\"\n               :model=\"editParams\"\n               label-width=\"70px\">\n        <el-form-item label=\"参数名称\">\n          <el-input v-model=\"editParams.param_name\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"是否必需\">\n          <template>\n            <el-radio v-model=\"editParams.is_necessary\"\n                      label=\"0\">必需</el-radio>\n            <el-radio v-model=\"editParams.is_necessary\"\n                      label=\"1\">非必需</el-radio>\n          </template>\n        </el-form-item>\n        <el-form-item label=\"参数描述\">\n          <el-input v-model=\"editParams.param_desc\"></el-input>\n        </el-form-item>\n\n        <el-form-item label=\"参数示例\">\n          <el-input v-model=\"editParams.default\"></el-input>\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\"\n            class=\"dialog-footer\">\n        <el-button @click=\"editDialogVisible = false\">取 消</el-button>\n        <el-button type=\"primary\"\n                   @click=\"editInterfaceParam ()\">确 定</el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      //  -------获取数据 参数 -------\n      getInterfaceInfobody: {\n        interface_id: ''\n      },\n      getProjectListBody: {},\n      getModelListBody: {\n        project_id: ''\n      },\n      //  -------控制显示隐藏 -------\n      addDialogVisible: false,\n      editDialogVisible: false,\n      formProjectAndModel: true,\n      createInterfaceButton: true,\n      //  -------创建参数 -------\n      createInterfaceBody: {\n        project_id: '',\n        model_id: '',\n        interface_name: '',\n        interface_desc: '',\n        interface_type: '',\n        method: '',\n        path: ''\n      },\n      createParams: {\n        interface_id: '',\n        param_name: '',\n        is_necessary: '0',\n        param_desc: '',\n        default: ''\n      },\n      editParams: {\n        interface_id: '',\n        params_id: '',\n        param_name: '',\n        is_necessary: '',\n        param_desc: '',\n        default: ''\n      },\n      createHeader: {\n        interface_id: '',\n        header: ''\n      },\n      createResponse: {\n        interface_id: '',\n        response: ''\n      },\n      // -------返回数据-------\n      projectList: {\n        project_id: '',\n        project_name: ''\n      },\n      modelList: {\n        model_id: '',\n        model_name: '',\n        list: []\n      },\n      paramsList: [],\n      delParam: {\n        param_id: ''\n      },\n\n      interface_type_options: [{\n        value: 'http',\n        label: 'http'\n      }, {\n        value: 'https',\n        label: 'https'\n      }],\n      method_options: [{\n        value: 'GET',\n        label: 'GET'\n      }, {\n        value: 'POST',\n        label: 'POST'\n      }],\n      addRulesForm: {\n        project_name: [\n          { required: true, message: '请输入项目名', trigger: 'blur' }\n        ],\n        interface_name: [\n          { required: true, message: '请输入接口名', trigger: 'blur' }\n        ],\n        interface_type: [\n          { required: true, trigger: 'blur' }\n        ],\n        method: [\n          { required: true, trigger: 'blur' }\n        ],\n        path: [\n          { required: true, message: '请输入路径', trigger: 'blur' }\n        ]\n      }\n    }\n  },\n  created () {\n    if (window.sessionStorage.getItem('interface_id')) {\n      this.formProjectAndModel = false\n      // 修改的话获取当前interface详情\n      this.getInterfaceInfo()\n    } else {\n      // 获取所有project\n      this.addInterfaceGetProjectList()\n    }\n  },\n  methods: {\n    goInterfaceList () {\n      this.$router.push('/interface/list')\n    },\n    // 获取接口详情\n    async getInterfaceInfo () {\n      // 从session中获取 interface_id\n      this.getInterfaceInfobody.interface_id = window.sessionStorage.getItem('interface_id')\n      const { data: res } = await this.$api.myinterface.getInterfaceInfoMethod(\n        this.getInterfaceInfobody\n      )\n      if (res.code !== 1) {\n        return this.$message.error('获取接口列表失败！')\n      }\n      this.createInterfaceBody = res.data\n      this.paramsList = res.data.params\n      this.createHeader.header = res.data.header\n      this.createResponse.response = res.data.response\n    },\n    // 获取所有项目的id和名称\n    async addInterfaceGetProjectList () {\n      const { data: projectRes } = await this.$api.project.getProjectList(\n        this.getProjectListBody\n      )\n      if (projectRes.code !== 1) {\n        return this.$message.error('获取项目列表失败！')\n      }\n      this.projectList = projectRes.data\n    },\n    // 根据项目id获取模块\n    async addInterfaceGetModelList (id) {\n      this.getModelListBody.project_id = id\n      const { data: responseBody } = await this.$api.project.getModelList(\n        this.getModelListBody\n      )\n      if (responseBody.code !== 1) {\n        return this.$message.error('获取模块列表失败！')\n      }\n      this.modelList.list = responseBody.data\n    },\n    // 创建接口\n    async createInterface () {\n      // 如果this.$store.interface_id 不赋值也就是 undefined\n      if (!window.sessionStorage.getItem('interface_id')) {\n        this.createInterfaceBody.project_id = this.projectList.project_id\n        this.createInterfaceBody.model_id = this.modelList.model_id\n        const { data: createModelRes } = await this.$api.myinterface.createInterfaceMethod(\n          this.createInterfaceBody\n        )\n        if (createModelRes.code === 1) {\n          this.createInterfaceButton = false\n          this.$message.success('添加接口成功！')\n          // this.$store.commit('setInterfaceId', createModelRes.data.interface_id)\n          window.sessionStorage.setItem('interface_id', createModelRes.data.interface_id)\n        } else {\n          this.$message.error('添加接口失败！')\n        }\n      } else {\n        this.createInterfaceBody.interface_id = window.sessionStorage.getItem('interface_id')\n        const { data: createModelRes } = await this.$api.myinterface.editInterfaceMethod(\n          this.createInterfaceBody\n        )\n        if (createModelRes.code === 1) {\n          this.$message.success('修改接口成功！')\n        } else {\n          this.$message.error('修改接口失败！')\n        }\n      }\n    },\n    showCreateInterfaceParamDialog () {\n      this.addDialogVisible = true\n    },\n    // 监听添加用户对话框关闭事件\n    addDialogClosed () {\n      this.$refs.addFormRef.resetFields()\n    },\n    // 创建Param\n    async createInterfaceParam () {\n      this.createParams.interface_id = window.sessionStorage.getItem('interface_id')\n      this.createParams.is_necessary = Number(this.createParams.is_necessary)\n      const { data: createModelRes } = await this.$api.myinterface.createInterfaceParamMethod(\n        this.createParams\n      )\n      if (createModelRes.code === 1) {\n        this.$message.success('添加参数成功！')\n        this.addDialogVisible = false\n        this.getInterfaceInfo()\n      } else {\n        this.$message.error('添加参数失败！')\n      }\n    },\n    showEditInterfaceParamDialog (paramInfo) {\n      console.log(paramInfo)\n      this.editDialogVisible = true\n      this.editParams = paramInfo\n      this.editParams.is_necessary = paramInfo.is_necessary + ''\n      this.editParams.interface_id = Number(sessionStorage.getItem('interface_id'))\n      console.log(this.editParams)\n    },\n    // 修改Param\n    async editInterfaceParam () {\n      this.editParams.is_necessary = Number(this.editParams.is_necessary)\n      const { data: createModelRes } = await this.$api.myinterface.editInterfaceParamMethod(\n        this.editParams\n      )\n      if (createModelRes.code === 1) {\n        this.$message.success('修改请求参数成功！')\n        this.editDialogVisible = false\n        this.getInterfaceInfo()\n      } else {\n        this.$message.error('修改请求参数失败！')\n      }\n    },\n    // 修改 请求头\n    async createInterfaceHeader () {\n      this.createHeader.interface_id = window.sessionStorage.getItem('interface_id')\n      const { data: createModelRes } = await this.$api.myinterface.createInterfaceHeaderMethod(\n        this.createHeader\n      )\n      if (createModelRes.code === 1) {\n        this.$message.success('修改请求头成功！')\n        this.getInterfaceInfo()\n      } else {\n        this.$message.error('修改请求头失败！')\n      }\n    },\n    // 修改 返回信息\n    async createInterfaceResponse () {\n      this.createResponse.interface_id = window.sessionStorage.getItem('interface_id')\n      const { data: createModelRes } = await this.$api.myinterface.createInterfaceResponseMethod(\n        this.createResponse\n      )\n      if (createModelRes.code === 1) {\n        this.$message.success('修改返回信息成功！')\n        this.getInterfaceInfo()\n      } else {\n        this.$message.error('修改返回信息失败！')\n      }\n    },\n    // 删除 参数\n    async removeInterfaceParamById (id) {\n      this.delParam.param_id = id\n      const { data: createModelRes } = await this.$api.myinterface.removeInterfaceParamMethod(\n        this.delParam\n      )\n      if (createModelRes.code === 1) {\n        this.$message.success('删除请求参数成功！')\n        this.getInterfaceInfo()\n      } else {\n        this.$message.error('删除请求参数失败！')\n      }\n    }\n\n  }\n\n}\n\n</script>\n<style lang=\"less\" scoped>\n.goInterfaceList-button {\n  float: right;\n  margin-bottom: 25px;\n  margin-right: 60px;\n}\n.interface-info {\n  width: 65%;\n  margin-left: 100px;\n  margin-bottom: 15px;\n  padding-top: 15px;\n  padding-bottom: 15px;\n  padding-left: 50px;\n  padding-right: 50px;\n  background-color: #eee;\n}\n.interface-title-style {\n  border-left: 3px solid #2395f1;\n  padding-left: 8px;\n  margin-bottom: 20px;\n  margin-left: 15px;\n}\n.goProject-dialog-footer {\n  position: relative;\n  top: 50%;\n  left: 50%;\n  margin: 0 0 0 -100px;\n}\n.goProject-dialog-footer-info-param {\n  position: relative;\n  top: 50%;\n  left: 45%;\n}\n.topSteps {\n  margin-left: 20px;\n  margin-right: 20px;\n}\n.topStepsCard {\n  margin-bottom: 5px;\n}\n.header_input {\n  margin-bottom: 15px;\n}\n.interfaceinfo-response-json {\n  margin-bottom: 15px;\n}\n</style>\n"]}]}