{"remainingRequest":"/Users/zhwtest/Desktop/VueProjects/flask_api_ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhwtest/Desktop/VueProjects/flask_api_ui/src/components/JsonEditor/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zhwtest/Desktop/VueProjects/flask_api_ui/src/components/JsonEditor/index.vue","mtime":1585902949358},{"path":"/Users/zhwtest/Desktop/VueProjects/flask_api_ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhwtest/Desktop/VueProjects/flask_api_ui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zhwtest/Desktop/VueProjects/flask_api_ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhwtest/Desktop/VueProjects/flask_api_ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBDb2RlTWlycm9yIGZyb20gJ2NvZGVtaXJyb3InCmltcG9ydCAnY29kZW1pcnJvci9hZGRvbi9saW50L2xpbnQuY3NzJwppbXBvcnQgJ2NvZGVtaXJyb3IvbGliL2NvZGVtaXJyb3IuY3NzJwppbXBvcnQgJ2NvZGVtaXJyb3IvdGhlbWUvcnVieWJsdWUuY3NzJwppbXBvcnQgJ2NvZGVtaXJyb3IvbW9kZS9qYXZhc2NyaXB0L2phdmFzY3JpcHQnCmltcG9ydCAnY29kZW1pcnJvci9hZGRvbi9saW50L2xpbnQnCmltcG9ydCAnY29kZW1pcnJvci9hZGRvbi9saW50L2pzb24tbGludCcKLy8gcmVxdWlyZSgnc2NyaXB0LWxvYWRlciFqc29ubGludCcpCgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0pzb25FZGl0b3InLAogIC8qIGVzbGludC1kaXNhYmxlIHZ1ZS9yZXF1aXJlLXByb3AtdHlwZXMgKi8KICBwcm9wczogWyd2YWx1ZSddLAogIGRhdGEgKCkgewogICAgcmV0dXJuIHsKICAgICAganNvbkVkaXRvcjogZmFsc2UKICAgIH0KICB9LAogIHdhdGNoOiB7CiAgICB2YWx1ZSAodmFsdWUpIHsKICAgICAgY29uc3QgZWRpdG9yVmFsdWUgPSB0aGlzLmpzb25FZGl0b3IuZ2V0VmFsdWUoKQogICAgICBpZiAodmFsdWUgIT09IGVkaXRvclZhbHVlKSB7CiAgICAgICAgdGhpcy5qc29uRWRpdG9yLnNldFZhbHVlKEpTT04uc3RyaW5naWZ5KHRoaXMudmFsdWUsIG51bGwsIDIpKQogICAgICB9CiAgICB9CiAgfSwKICBtb3VudGVkICgpIHsKICAgIHRoaXMuanNvbkVkaXRvciA9IENvZGVNaXJyb3IuZnJvbVRleHRBcmVhKHRoaXMuJHJlZnMudGV4dGFyZWEsIHsKICAgICAgbGluZU51bWJlcnM6IHRydWUsCiAgICAgIG1vZGU6ICdhcHBsaWNhdGlvbi9qc29uJywKICAgICAgZ3V0dGVyczogWydDb2RlTWlycm9yLWxpbnQtbWFya2VycyddLAogICAgICB0aGVtZTogJ3J1YnlibHVlJywKICAgICAgbGludDogdHJ1ZQogICAgfSkKCiAgICB0aGlzLmpzb25FZGl0b3Iuc2V0VmFsdWUoSlNPTi5zdHJpbmdpZnkodGhpcy52YWx1ZSwgbnVsbCwgMikpCiAgICB0aGlzLmpzb25FZGl0b3Iub24oJ2NoYW5nZScsIGNtID0+IHsKICAgICAgdGhpcy4kZW1pdCgnY2hhbmdlZCcsIGNtLmdldFZhbHVlKCkpCiAgICAgIHRoaXMuJGVtaXQoJ2lucHV0JywgY20uZ2V0VmFsdWUoKSkKICAgIH0pCiAgfSwKICBtZXRob2RzOiB7CiAgICBnZXRWYWx1ZSAoKSB7CiAgICAgIHJldHVybiB0aGlzLmpzb25FZGl0b3IuZ2V0VmFsdWUoKQogICAgfQogIH0KfQo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/JsonEditor","sourcesContent":["<template>\n  <div class=\"json-editor\">\n    <textarea ref=\"textarea\" />\n    </div>\n</template>\n\n<script>\nimport CodeMirror from 'codemirror'\nimport 'codemirror/addon/lint/lint.css'\nimport 'codemirror/lib/codemirror.css'\nimport 'codemirror/theme/rubyblue.css'\nimport 'codemirror/mode/javascript/javascript'\nimport 'codemirror/addon/lint/lint'\nimport 'codemirror/addon/lint/json-lint'\n// require('script-loader!jsonlint')\n\nexport default {\n  name: 'JsonEditor',\n  /* eslint-disable vue/require-prop-types */\n  props: ['value'],\n  data () {\n    return {\n      jsonEditor: false\n    }\n  },\n  watch: {\n    value (value) {\n      const editorValue = this.jsonEditor.getValue()\n      if (value !== editorValue) {\n        this.jsonEditor.setValue(JSON.stringify(this.value, null, 2))\n      }\n    }\n  },\n  mounted () {\n    this.jsonEditor = CodeMirror.fromTextArea(this.$refs.textarea, {\n      lineNumbers: true,\n      mode: 'application/json',\n      gutters: ['CodeMirror-lint-markers'],\n      theme: 'rubyblue',\n      lint: true\n    })\n\n    this.jsonEditor.setValue(JSON.stringify(this.value, null, 2))\n    this.jsonEditor.on('change', cm => {\n      this.$emit('changed', cm.getValue())\n      this.$emit('input', cm.getValue())\n    })\n  },\n  methods: {\n    getValue () {\n      return this.jsonEditor.getValue()\n    }\n  }\n}\n</script>\n\n<style scoped>\n.json-editor {\n  height: 100%;\n  position: relative;\n}\n.json-editor >>> .CodeMirror {\n  height: auto;\n  min-height: 300px;\n}\n.json-editor >>> .CodeMirror-scroll {\n  min-height: 300px;\n}\n.json-editor >>> .cm-s-rubyblue span.cm-string {\n  color: #f08047;\n}\n</style>\n"]}]}