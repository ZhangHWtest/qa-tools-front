{"remainingRequest":"/Users/zhwtest/Desktop/VueProjects/flask_api_ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhwtest/Desktop/VueProjects/flask_api_ui/src/views/environment/Index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zhwtest/Desktop/VueProjects/flask_api_ui/src/views/environment/Index.vue","mtime":1586144121813},{"path":"/Users/zhwtest/Desktop/VueProjects/flask_api_ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhwtest/Desktop/VueProjects/flask_api_ui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zhwtest/Desktop/VueProjects/flask_api_ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhwtest/Desktop/VueProjects/flask_api_ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBFbnZUYWJsZSBmcm9tICcuL2NvbXBvbmVudHMvRW52VGFibGUnCmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7CiAgICBFbnZUYWJsZQogIH0sCiAgY3JlYXRlZCAoKSB7CiAgICB0aGlzLmVudmlyb25tZW50TGlzdE1ldGhvZCgpCiAgfSwKICBkYXRhICgpIHsKICAgIHJldHVybiB7CiAgICAgIGdldGVudkJvZHk6IHsKICAgICAgICBwYWdlX251bTogMQogICAgICB9CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBhc3luYyBlbnZpcm9ubWVudExpc3RNZXRob2QgKCkgewogICAgICBjb25zdCB7IGRhdGE6IHJlc3BvbnNlQm9keSB9ID0gYXdhaXQgdGhpcy4kYXBpLmVudmlyb25tZW50LmdldEVudmlyb25tZW50TGlzdCgKICAgICAgICB0aGlzLmdldGVudkJvZHkKICAgICAgKQogICAgICBpZiAocmVzcG9uc2VCb2R5LmNvZGUgPT09IDEpIHsKICAgICAgICB0aGlzLmludGVyZmFjZUxpc3QgPSByZXNwb25zZUJvZHkuZGF0YQogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IoJ+ivt+axgueOr+Wig+S/oeaBr+Wksei0pe+8gScpCiAgICAgIH0KICAgIH0KICB9Cgp9Cg=="},{"version":3,"sources":["Index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"Index.vue","sourceRoot":"src/views/environment","sourcesContent":["<template>\n  <div>\n    <!-- 面包屑导航区域-->\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\"\n                   class=\"myBreadcrumb\">\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\n      <el-breadcrumb-item>环境列表</el-breadcrumb-item>\n    </el-breadcrumb>\n    <!-- 卡片视图区域-->\n    <el-card>\n      <div>\n        <\n      </div>\n    </el-card>\n  </div>\n</template>\n\n<script>\nimport EnvTable from './components/EnvTable'\nexport default {\n  components: {\n    EnvTable\n  },\n  created () {\n    this.environmentListMethod()\n  },\n  data () {\n    return {\n      getenvBody: {\n        page_num: 1\n      }\n    }\n  },\n  methods: {\n    async environmentListMethod () {\n      const { data: responseBody } = await this.$api.environment.getEnvironmentList(\n        this.getenvBody\n      )\n      if (responseBody.code === 1) {\n        this.interfaceList = responseBody.data\n      } else {\n        this.$message.error('请求环境信息失败！')\n      }\n    }\n  }\n\n}\n</script>\n\n<style lang=\"less\" scoped>\n</style>\n"]}]}