{"remainingRequest":"/Users/zhwtest/Desktop/VueProjects/flask_api_ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhwtest/Desktop/VueProjects/flask_api_ui/src/views/user/UserList.vue?vue&type=style&index=0&id=19a8d728&lang=less&scoped=true&","dependencies":[{"path":"/Users/zhwtest/Desktop/VueProjects/flask_api_ui/src/views/user/UserList.vue","mtime":1585536608871},{"path":"/Users/zhwtest/Desktop/VueProjects/flask_api_ui/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhwtest/Desktop/VueProjects/flask_api_ui/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/zhwtest/Desktop/VueProjects/flask_api_ui/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/zhwtest/Desktop/VueProjects/flask_api_ui/node_modules/less-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhwtest/Desktop/VueProjects/flask_api_ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhwtest/Desktop/VueProjects/flask_api_ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmFwaVN0YXR1cyB7CiAgcGFkZGluZy1sZWZ0OiAxMHB4OwogIC5hcGlBY3RpdmU6OmJlZm9yZSB7CiAgICBjb250ZW50OiAiIjsKICAgIGRpc3BsYXk6IGJsb2NrOwogICAgd2lkdGg6IDEwcHg7CiAgICBoZWlnaHQ6IDEwcHg7CiAgICBiYWNrZ3JvdW5kOiAjNjdjMjNhOwogICAgYm9yZGVyLXJhZGl1czogNTAlOwogICAgcG9zaXRpb246IGFic29sdXRlOwogICAgbGVmdDogMTBweDsKICAgIHRvcDogNTAlOwogICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7CiAgfQogIC5hcGlOb0FjdGl2ZTo6YmVmb3JlIHsKICAgIGNvbnRlbnQ6ICIiOwogICAgZGlzcGxheTogYmxvY2s7CiAgICB3aWR0aDogMTBweDsKICAgIGhlaWdodDogMTBweDsKICAgIGJhY2tncm91bmQ6ICNmNTZjNmM7CiAgICBib3JkZXItcmFkaXVzOiA1MCU7CiAgICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgICBsZWZ0OiAxMHB4OwogICAgdG9wOiA1MCU7CiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTsKICB9Cn0K"},{"version":3,"sources":["UserList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"UserList.vue","sourceRoot":"src/views/user","sourcesContent":["<template>\n  <div>\n    <!-- 面包屑导航区域-->\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\n      <el-breadcrumb-item>用户管理</el-breadcrumb-item>\n      <el-breadcrumb-item>用户列表</el-breadcrumb-item>\n    </el-breadcrumb>\n    <!-- 卡片视图区域-->\n    <el-card>\n      <el-row :gutter=\"30\">\n        <el-col :span=\"5\">\n          <el-button type=\"primary\"\n                     plain\n                     @click=\"addDialogVisible = true\">新增用户</el-button>\n        </el-col>\n      </el-row>\n\n      <!-- api列表区域-->\n      <el-table border\n                :data=\"userList\">\n        <el-table-column width=\"50px\"\n                         label=\"uid\"\n                         prop=\"uid\"></el-table-column>\n        <el-table-column label=\"姓名\"\n                         prop=\"username\"></el-table-column>\n        <el-table-column label=\"角色\"\n                         prop=\"role\"></el-table-column>\n        <el-table-column label=\"状态\"\n                         width=\"80px\">\n          <template slot-scope=\"scope\">\n            <div class=\"apiStatus\">\n              <font v-if=\"scope.row.status\"\n                    color=\"#67C23A\"\n                    class=\"apiActive\">启动</font>\n              <font v-else\n                    color=\"#F56C6C\"\n                    class=\"apiNoActive\">禁用</font>\n            </div>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"操作\"\n                         width=\"150px\">\n          <template slot-scope=\"scope\">\n            <!-- 修改按钮 -->\n            <el-tooltip class=\"item\"\n                        effect=\"dark\"\n                        content=\"修改\"\n                        placement=\"top\">\n              <el-button type=\"primary\"\n                         icon=\"el-icon-edit\"\n                         size=\"mini\"\n                         ricon=\"el-icon-edit\"\n                         circle\n                         @click=\"showEditDialog(scope)\"></el-button>\n            </el-tooltip>\n\n            <!-- 重置密码-->\n            <el-tooltip class=\"item\"\n                        effect=\"dark\"\n                        content=\"重置密码\"\n                        placement=\"top\">\n              <el-button type=\"warning\"\n                         icon=\"el-icon-setting\"\n                         size=\"mini\"\n                         circle\n                         @click=\"resetPassword(scope)\"></el-button>\n            </el-tooltip>\n          </template>\n        </el-table-column>\n      </el-table>\n    </el-card>\n    <!-- 添加用户对话框-->\n    <el-dialog title=\"添加用户\"\n               :visible.sync=\"addDialogVisible\"\n               width=\"50%\"\n               @close=\"addDialogClosed\">\n      <!-- 内容主体区域-->\n      <el-form ref=\"addFormRef\"\n               :model=\"createUser\"\n               :rules=\"addRulesForm\"\n               label-width=\"70px\">\n        <el-form-item label=\"用户名\"\n                      prop=\"username\">\n          <el-input v-model=\"createUser.username\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"邮箱\"\n                      prop=\"email\">\n          <el-input v-model=\"createUser.email\"></el-input>\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\"\n            class=\"dialog-footer\">\n        <el-button @click=\"addDialogVisible = false\">取 消</el-button>\n        <el-button type=\"primary\"\n                   @click=\"addUser\">确 定</el-button>\n      </span>\n    </el-dialog>\n    <!-- 修改用户对话框-->\n    <el-dialog title=\"修改用户\"\n               :visible.sync=\"editDialogVisible\"\n               width=\"50%\"\n               @close=\"editDialogClosed\">\n      <!-- 内容主体区域-->\n      <el-form ref=\"editFormRef\"\n               :model=\"editUser\"\n               :rules=\"addRulesForm\"\n               label-width=\"70px\">\n        <el-form-item label=\"角色: \">\n          <el-radio-group v-model=\"editUser.role_id\">\n            <el-radio :label=\"1\">User</el-radio>\n            <el-radio :label=\"2\">Leader</el-radio>\n            <el-radio :label=\"3\">Admin</el-radio>\n          </el-radio-group>\n        </el-form-item>\n        <el-form-item label=\"状态: \">\n          <el-radio-group v-model=\"editUser.status\">\n            <el-radio :label=\"true\">启用</el-radio>\n            <el-radio :label=\"false\">禁用</el-radio>\n          </el-radio-group>\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\"\n            class=\"dialog-footer\">\n        <el-button @click=\"editDialogVisible = false\">取 消</el-button>\n        <el-button type=\"primary\"\n                   @click=\"editUserInfo()\">确 定</el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    var checkEmail = (rule, value, cb) => {\n      const regEmail = /^[A-Za-z0-9\\u4e00-\\u9fa5]+@[a-zA-Z0-9_-]+(\\.[a-zA-Z0-9_-]+)+$/\n      if (regEmail.test(value)) {\n        return cb()\n      }\n      cb(new Error('请输入合法的邮箱！'))\n    }\n    return {\n      queryInfo: {\n        page_num: 1\n      },\n      userList: {},\n      // 新增用户绑定参数\n      createUser: {\n        username: [],\n        email: []\n      },\n      editUser: {\n        uid: '',\n        role_id: '',\n        status: ''\n      },\n      editUserRoles: {\n        uid: '',\n        role_id: ''\n      },\n      editUserStatus: {\n        uid: '',\n        status: ''\n      },\n      userStatus: true,\n      addRulesForm: {\n        username: [\n          { required: true, message: '请输入用户名', trigger: 'blur' }\n        ],\n        email: [\n          { required: true, message: '请输入邮箱', trigger: 'blur' },\n          { validator: checkEmail, trigger: 'blur' }\n        ]\n      },\n      // 新增用户窗口打开关闭\n      addDialogVisible: false,\n      // 编辑用户窗口打开关闭\n      editDialogVisible: false,\n      resetPasswordBody: {\n        uid: ''\n      }\n    }\n  },\n  created () {\n    this.getUserList()\n  },\n  methods: {\n    // 监听添加用户对话框关闭事件\n    addDialogClosed () {\n      this.$refs.addFormRef.resetFields()\n    },\n    // 点击”确认“提交前的预校验\n    addUser () {\n      this.$refs.addFormRef.validate(async valid => {\n        if (!valid) return\n        const { data: res } = await this.$api.user.createUser(this.createUser)\n        if (res.code !== 1) {\n          this.$message.error('添加用户失败！')\n        }\n        this.$message.success('添加用户成功！')\n        // 添加成功关闭对话框\n        this.addDialogVisible = false\n        // 重新获取列表数据\n        this.getUserList()\n      })\n    },\n    async getUserList () {\n      const { data: userRes } = await this.$api.user.getUserList(this.queryInfo)\n      console.log(userRes)\n      if (userRes.code !== 1) {\n        return this.$message.error('获取用户列表失败！')\n      }\n      this.userList = userRes.data\n    },\n    async resetPassword (scope) {\n      console.log(scope)\n      this.resetPasswordBody.uid = scope.row.uid\n      const { data: getMGRes } = await this.$api.user.resetPasswordApi(\n        this.resetPasswordBody\n      )\n      if (getMGRes.code === 1) {\n        return this.$message.success('修改成功！')\n      }\n      return this.$message.error('修改失败！')\n    },\n    editDialogClosed () {\n      this.$refs.editFormRef.resetFields()\n    },\n    // 展示编辑用户的对话框\n    async showEditDialog (scope) {\n      console.log(scope)\n      if (scope.row.role === 'User') {\n        this.editUser.role_id = 1\n      } else if (scope.row.role === 'Leader') {\n        this.editUser.role_id = 2\n      } else {\n        this.editUser.role_id = 3\n      }\n      this.editUser.status = scope.row.status\n      this.editUser.uid = scope.row.uid\n\n      this.editDialogVisible = true\n    },\n    // 修改用户信息并提交\n    editUserInfo () {\n      this.$refs.editFormRef.validate(async valid => {\n        if (!valid) return\n        this.editUserStatus.uid = this.editUser.uid\n        if (this.editUser.status) {\n          this.editUserStatus.status = 'True'\n        } else {\n          this.editUserStatus.status = 'False'\n        }\n\n        const { data: statusRes } = await this.$api.user.onOffUserApi(\n          this.editUserStatus\n        )\n        if (statusRes.code !== 1) {\n          return this.$message.error('修改用户信息失败！')\n        }\n        this.editUserRoles.uid = this.editUser.uid\n        this.editUserRoles.role_id = this.editUser.role_id\n        const { data: roleRes } = await this.$api.user.setRoleApi(\n          this.editUserRoles\n        )\n        // 关闭对框\n        this.editDialogVisible = false\n        // 提示信息\n        this.$message.success('更新成功！')\n        // 刷新数据\n        this.getUserList()\n      })\n    }\n  }\n}\n</script>\n\n<style lang=\"less\" scoped>\n.apiStatus {\n  padding-left: 10px;\n  .apiActive::before {\n    content: \"\";\n    display: block;\n    width: 10px;\n    height: 10px;\n    background: #67c23a;\n    border-radius: 50%;\n    position: absolute;\n    left: 10px;\n    top: 50%;\n    transform: translate(-50%, -50%);\n  }\n  .apiNoActive::before {\n    content: \"\";\n    display: block;\n    width: 10px;\n    height: 10px;\n    background: #f56c6c;\n    border-radius: 50%;\n    position: absolute;\n    left: 10px;\n    top: 50%;\n    transform: translate(-50%, -50%);\n  }\n}\n</style>\n"]}]}