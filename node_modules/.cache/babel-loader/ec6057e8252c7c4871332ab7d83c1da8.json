{"remainingRequest":"/Users/zhwtest/Desktop/VueProjects/flask_api_ui/node_modules/babel-loader/lib/index.js!/Users/zhwtest/Desktop/VueProjects/flask_api_ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/zhwtest/Desktop/VueProjects/flask_api_ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhwtest/Desktop/VueProjects/flask_api_ui/src/views/project/components/AddProject.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zhwtest/Desktop/VueProjects/flask_api_ui/src/views/project/components/AddProject.vue","mtime":1585710520786},{"path":"/Users/zhwtest/Desktop/VueProjects/flask_api_ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhwtest/Desktop/VueProjects/flask_api_ui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zhwtest/Desktop/VueProjects/flask_api_ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhwtest/Desktop/VueProjects/flask_api_ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["AddProject.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2IA,eAAA;AACA,EAAA,OADA,qBACA;AACA,SAAA,WAAA,CAAA,YAAA,GAAA,KAAA,MAAA,CAAA,KAAA,CAAA,IAAA;AACA,SAAA,WAAA,CAAA,UAAA,GAAA,KAAA,MAAA,CAAA,KAAA,CAAA,EAAA;AACA,SAAA,SAAA;AACA,GALA;AAMA,EAAA,IANA,kBAMA;AACA,WAAA;AACA;AACA,MAAA,WAAA,EAAA;AACA,QAAA,UAAA,EAAA,EADA;AAEA,QAAA,YAAA,EAAA;AAFA,OAFA;AAMA,MAAA,gBAAA,EAAA;AACA,QAAA,UAAA,EAAA,EADA;AAEA,QAAA,QAAA,EAAA;AAFA,OANA;AAUA,MAAA,iBAAA,EAAA;AACA,QAAA,YAAA,EAAA;AADA,OAVA;AAaA,MAAA,eAAA,EAAA;AACA,QAAA,UAAA,EAAA,EADA;AAEA,QAAA,YAAA,EAAA;AAFA,OAbA;AAiBA,MAAA,eAAA,EAAA;AACA,QAAA,UAAA,EAAA,EADA;AAEA,QAAA,UAAA,EAAA;AAFA,OAjBA;AAqBA,MAAA,WAAA,EAAA;AACA,QAAA,QAAA,EAAA;AADA,OArBA;AAwBA,MAAA,aAAA,EAAA;AACA,QAAA,QAAA,EAAA,EADA;AAEA,QAAA,UAAA,EAAA;AAFA,OAxBA;AA4BA,MAAA,YAAA,EAAA,EA5BA;AA6BA,MAAA,YAAA,EAAA;AACA,QAAA,YAAA,EAAA,CACA;AAAA,UAAA,QAAA,EAAA,IAAA;AAAA,UAAA,OAAA,EAAA,QAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SADA;AADA,OA7BA;AAkCA,MAAA,aAAA,EAAA;AACA,QAAA,UAAA,EAAA,CACA;AAAA,UAAA,QAAA,EAAA,IAAA;AAAA,UAAA,OAAA,EAAA,QAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SADA;AADA,OAlCA;AAuCA;AACA,MAAA,SAAA,EAAA,KAxCA;AAyCA;AACA,MAAA,oBAAA,EAAA,KA1CA;AA2CA;AACA,MAAA,iBAAA,EAAA,KA5CA;AA6CA,MAAA,cAAA,EAAA;AA7CA,KAAA;AA+CA,GAtDA;AAuDA,EAAA,OAAA,EAAA;AACA;AACA,IAAA,aAFA,2BAEA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA,eAAA;AACA,KAJA;AAKA;AACA,IAAA,mBANA,+BAMA,OANA,EAMA;AACA,WAAA,gBAAA,CAAA,QAAA,GAAA,OAAA;AACA,WAAA,SAAA;AACA,KATA;AAUA,IAAA,oBAVA,kCAUA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,SAAA;AACA,WAAA,cAAA,GAAA,IAAA;AACA,KAbA;AAcA;AACA,IAAA,SAfA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAgBA,qBAAA,iBAAA,CAAA,YAAA,GAAA,KAAA,WAAA,CAAA,YAAA;AACA,qBAAA,gBAAA,CAAA,UAAA,GAAA,KAAA,WAAA,CAAA,UAAA;AAjBA;AAAA,uBAkBA,KAAA,IAAA,CAAA,OAAA,CAAA,YAAA,CACA,KAAA,gBADA,CAlBA;;AAAA;AAAA;AAkBA,gBAAA,YAlBA,QAkBA,IAlBA;;AAAA,sBAqBA,YAAA,CAAA,IAAA,KAAA,CArBA;AAAA;AAAA;AAAA;;AAAA,iDAsBA,KAAA,QAAA,CAAA,KAAA,CAAA,WAAA,CAtBA;;AAAA;AAwBA,qBAAA,YAAA,GAAA,YAAA,CAAA,IAAA;;AAxBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA0BA;AACA,IAAA,aA3BA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AA4BA,qBAAA,SAAA,GAAA,IAAA;;AA5BA,oBA6BA,KAAA,WAAA,CAAA,UA7BA;AAAA;AAAA;AAAA;;AAAA;AAAA,uBA+BA,KAAA,IAAA,CAAA,OAAA,CAAA,UAAA,CACA,KAAA,iBADA,CA/BA;;AAAA;AAAA;AA+BA,gBAAA,GA/BA,SA+BA,IA/BA;;AAkCA,oBAAA,GAAA,CAAA,IAAA,KAAA,CAAA,EAAA;AACA,uBAAA,QAAA,CAAA,OAAA,CAAA,SAAA;AACA,uBAAA,WAAA,CAAA,UAAA,GAAA,GAAA,CAAA,IAAA,CAAA,UAAA;AACA,uBAAA,WAAA,CAAA,YAAA,GAAA,GAAA,CAAA,IAAA,CAAA,YAAA;AACA,iBAJA,MAIA;AAAA,uBAAA,QAAA,CAAA,KAAA,CAAA,GAAA,CAAA,GAAA;AAAA;;AAtCA;AAAA;;AAAA;AAwCA;AACA,qBAAA,eAAA,CAAA,UAAA,GAAA,KAAA,WAAA,CAAA,UAAA;AACA,qBAAA,eAAA,CAAA,YAAA,GAAA,KAAA,WAAA,CAAA,YAAA;AA1CA;AAAA,uBA2CA,KAAA,IAAA,CAAA,OAAA,CAAA,WAAA,CACA,KAAA,eADA,CA3CA;;AAAA;AAAA;AA2CA,gBAAA,IA3CA,SA2CA,IA3CA;;AA8CA,oBAAA,IAAA,CAAA,IAAA,KAAA,CAAA,EAAA;AACA,uBAAA,QAAA,CAAA,OAAA,CAAA,SAAA;AACA,iBAFA,MAEA;AAAA,uBAAA,QAAA,CAAA,KAAA,CAAA,IAAA,CAAA,GAAA;AAAA;;AAhDA;AAkDA;AACA,gBAAA,UAAA,CAAA,YAAA;AACA,kBAAA,KAAA,CAAA,SAAA,GAAA,KAAA;AACA,iBAFA,EAEA,IAFA,CAAA;;AAnDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAuDA;AACA,IAAA,WAxDA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAyDA,qBAAA,oBAAA,GAAA,IAAA;AACA,qBAAA,eAAA,CAAA,UAAA,GAAA,KAAA,WAAA,CAAA,UAAA;AA1DA;AAAA,uBA2DA,KAAA,IAAA,CAAA,OAAA,CAAA,QAAA,CACA,KAAA,eADA,CA3DA;;AAAA;AAAA;AA2DA,gBAAA,cA3DA,SA2DA,IA3DA;;AA8DA,oBAAA,cAAA,CAAA,IAAA,KAAA,CAAA,EAAA;AACA,uBAAA,QAAA,CAAA,OAAA,CAAA,SAAA;AACA,iBAFA,MAEA;AACA,uBAAA,QAAA,CAAA,KAAA,CAAA,SAAA;AACA;;AACA,qBAAA,SAAA,GAnEA,CAoEA;;AACA,gBAAA,UAAA,CAAA,YAAA;AACA,kBAAA,MAAA,CAAA,oBAAA,GAAA,KAAA;AACA,iBAFA,EAEA,IAFA,CAAA;;AArEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAyEA;AACA,IAAA,eA1EA;AAAA;AAAA;AAAA,gDA0EA,EA1EA;AAAA;;AAAA;AAAA;AAAA;AAAA;AA2EA,qBAAA,WAAA,CAAA,QAAA,GAAA,EAAA;AA3EA;AAAA,uBA4EA,KAAA,IAAA,CAAA,OAAA,CAAA,QAAA,CACA,KAAA,WADA,CA5EA;;AAAA;AAAA;AA4EA,gBAAA,GA5EA,SA4EA,IA5EA;;AA+EA,oBAAA,GAAA,CAAA,IAAA,KAAA,CAAA,EAAA;AACA,uBAAA,QAAA,CAAA,OAAA,CAAA,SAAA;AACA,iBAFA,MAEA;AACA,uBAAA,QAAA,CAAA,KAAA,CAAA,SAAA;AACA;;AAEA,qBAAA,SAAA;;AArFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAuFA;AACA,IAAA,cAxFA;AAAA;AAAA;AAAA,gDAwFA,EAxFA,EAwFA,IAxFA;AAAA;AAAA;AAAA;AAAA;AAyFA,qBAAA,aAAA,CAAA,QAAA,GAAA,EAAA;AACA,qBAAA,aAAA,CAAA,UAAA,GAAA,IAAA;AACA,qBAAA,iBAAA,GAAA,IAAA;;AA3FA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA6FA;AACA,IAAA,aA9FA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBA+FA,KAAA,IAAA,CAAA,OAAA,CAAA,SAAA,CACA,KAAA,aADA,CA/FA;;AAAA;AAAA;AA+FA,gBAAA,GA/FA,SA+FA,IA/FA;;AAkGA,oBAAA,GAAA,CAAA,IAAA,KAAA,CAAA,EAAA;AACA,uBAAA,QAAA,CAAA,KAAA,CAAA,SAAA;AACA;;AACA,qBAAA,QAAA,CAAA,OAAA,CAAA,SAAA;AACA,qBAAA,iBAAA,GAAA,KAAA;AACA,qBAAA,SAAA;;AAvGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAyGA,IAAA,gBAzGA,8BAyGA;AACA,WAAA,KAAA,CAAA,WAAA,CAAA,WAAA;AACA;AA3GA;AAvDA,CAAA","sourcesContent":["<template>\n  <dev>\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\"\n                   class=\"myBreadcrumb\">\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\n      <el-breadcrumb-item :to=\"{path:'/project/list'}\">项目列表</el-breadcrumb-item>\n      <el-breadcrumb-item>项目详情</el-breadcrumb-item>\n    </el-breadcrumb>\n    <el-card>\n      <el-divider />\n      <div>\n        <!-- 内容主体区域-->\n        <el-form ref=\"addFormRef\"\n                 :model=\"createProjectBody\"\n                 :rules=\"addRulesForm\"\n                 label-width=\"100px\">\n          <el-form-item label=\"项目名称:\"\n                        prop=\"project_name\">\n            <el-input class=\"project_name_input\"\n                      placeholder=\"请输入项目名\"\n                      v-model=\"createProjectBody.project_name\"></el-input>\n            <template>\n              <el-tooltip class=\"item\"\n                          effect=\"dark\"\n                          content=\"新增/修改\"\n                          placement=\"top\">\n                <el-button class=\"createProjectButton\"\n                           type=\"success\"\n                           icon=\"el-icon-plus\"\n                           size=\"mini\"\n                           :disabled=\"isDisable\"\n                           circle\n                           @click=\"createProject()\"></el-button>\n              </el-tooltip>\n            </template>\n\n          </el-form-item>\n          <el-form-item label=\"模块名称:\">\n            <el-input class=\"project_name_input\"\n                      placeholder=\"请输入模块名\"\n                      v-model=\"createModelBody.model_name\"></el-input>\n            <template>\n              <el-tooltip class=\"item\"\n                          effect=\"dark\"\n                          content=\"新增\"\n                          placement=\"top\">\n                <el-button class=\"createProjectButton\"\n                           type=\"success\"\n                           icon=\"el-icon-plus\"\n                           size=\"mini\"\n                           :disabled=\"createModelIsDisable\"\n                           circle\n                           @click=\"createModel()\"></el-button>\n              </el-tooltip>\n            </template>\n          </el-form-item>\n          <!-- 模块列表区域-->\n          <el-table class=\"model_table\"\n                    border\n                    :data=\"getModelBody\"\n                    @row-dblclick=\"showTableInputMethod()\">\n            <el-table-column width=\"70px\"\n                             label=\"模块id\"\n                             prop=\"model_id\"></el-table-column>\n            <el-table-column label=\"模块名称\"\n                             prop=\"model_name\">\n            </el-table-column>\n            <el-table-column label=\"创建人\"\n                             prop=\"create_user\"></el-table-column>\n            <el-table-column label=\"操作\"\n                             width=\"120px\">\n              <template slot-scope=\"scope\">\n                <!-- 修改按钮 -->\n                <el-tooltip class=\"item\"\n                            effect=\"dark\"\n                            content=\"修改\"\n                            placement=\"top\">\n                  <el-button type=\"primary\"\n                             icon=\"el-icon-edit\"\n                             size=\"mini\"\n                             ricon=\"el-icon-edit\"\n                             circle\n                             @click=\"showEditDialog(scope.row.model_id,scope.row.model_name)\"></el-button>\n                </el-tooltip>\n                <!-- 删除按钮 -->\n                <el-tooltip class=\"item\"\n                            effect=\"dark\"\n                            content=\"删除\"\n                            placement=\"top\">\n                  <el-button type=\"danger\"\n                             icon=\"el-icon-delete\"\n                             size=\"mini\"\n                             ricon=\"el-icon-edit\"\n                             circle\n                             @click=\"removeModelById(scope.row.model_id)\"></el-button>\n                </el-tooltip>\n              </template>\n            </el-table-column>\n          </el-table>\n        </el-form>\n        <el-pagination background\n                       small\n                       :current-page=\"getModelListBody.page_num\"\n                       @current-change=\"handleCurrentChange\"\n                       layout=\"prev, pager, next\"\n                       :total=\"500\">\n        </el-pagination>\n        <span slot=\"footer\"\n              class=\"goProject-dialog-footer\">\n          <el-button @click=\"goProjectList()\">返回</el-button>\n        </span>\n      </div>\n    </el-card>\n    <!-- 修改模块对话框-->\n    <el-dialog title=\"修改模块\"\n               :visible.sync=\"editDialogVisible\"\n               width=\"50%\"\n               @close=\"editDialogClosed\">\n      <!-- 内容主体区域-->\n      <el-form ref=\"editFormRef\"\n               :model=\"editModelBody\"\n               :rules=\"editModelForm\"\n               label-width=\"85px\">\n        <el-form-item label=\"项目名称\"\n                      prop=\"model_name\">\n          <el-input v-model=\"editModelBody.model_name\"></el-input>\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\"\n            class=\"dialog-footer\">\n        <el-button @click=\"editDialogVisible = false\">取 消</el-button>\n        <el-button type=\"primary\"\n                   @click=\"editModelById()\">确 定</el-button>\n      </span>\n    </el-dialog>\n  </dev>\n</template>\n\n<script>\nexport default {\n  created () {\n    this.receiveBody.project_name = this.$route.query.name\n    this.receiveBody.project_id = this.$route.query.id\n    this.modelList()\n  },\n  data () {\n    return {\n      // 进入页面初始化的参数\n      receiveBody: {\n        project_id: '',\n        project_name: ''\n      },\n      getModelListBody: {\n        project_id: '',\n        page_num: 1\n      },\n      createProjectBody: {\n        project_name: ''\n      },\n      editProjectBody: {\n        project_id: '',\n        project_name: ''\n      },\n      createModelBody: {\n        project_id: '',\n        model_name: ''\n      },\n      removeModel: {\n        model_id: ''\n      },\n      editModelBody: {\n        model_id: '',\n        model_name: ''\n      },\n      getModelBody: {},\n      addRulesForm: {\n        project_name: [\n          { required: true, message: '请输入项目名', trigger: 'blur' }\n        ]\n      },\n      editModelForm: {\n        model_name: [\n          { required: true, message: '请输入模块名', trigger: 'blur' }\n        ]\n      },\n      // 控制按钮是否可点击\n      isDisable: false,\n      // 控制按钮是否可点击\n      createModelIsDisable: false,\n      // 控制对话框的显示与隐藏\n      editDialogVisible: false,\n      showTableInput: false\n    }\n  },\n  methods: {\n    // 确定，返回按钮回到list页面\n    goProjectList () {\n      this.$router.push('/project/list')\n    },\n    // 监听 页码值改变的事件\n    handleCurrentChange (newPage) {\n      this.getModelListBody.page_num = newPage\n      this.modelList()\n    },\n    showTableInputMethod () {\n      console.log('点击事件！！！')\n      this.showTableInput = true\n    },\n    // 获取所有模块列表\n    async modelList () {\n      this.createProjectBody.project_name = this.receiveBody.project_name\n      this.getModelListBody.project_id = this.receiveBody.project_id\n      const { data: responseBody } = await this.$api.project.getModelList(\n        this.getModelListBody\n      )\n      if (responseBody.code !== 1) {\n        return this.$message.error('获取用户列表失败！')\n      }\n      this.getModelBody = responseBody.data\n    },\n    // 点击”确认“提交前的预校验\n    async createProject () {\n      this.isDisable = true\n      if (!this.receiveBody.project_id) {\n        // 初始project_id没有数据调用 新增\n        const { data: res } = await this.$api.project.addProject(\n          this.createProjectBody\n        )\n        if (res.code === 1) {\n          this.$message.success('添加项目成功！')\n          this.receiveBody.project_id = res.data.project_id\n          this.receiveBody.project_name = res.data.project_name\n        } else { this.$message.error(res.msg) }\n      } else {\n        // 初始project_id有数据调用 修改\n        this.editProjectBody.project_id = this.receiveBody.project_id\n        this.editProjectBody.project_name = this.receiveBody.project_name\n        const { data: res } = await this.$api.project.editProject(\n          this.editProjectBody\n        )\n        if (res.code === 1) {\n          this.$message.success('修改项目成功！')\n        } else { this.$message.error(res.msg) }\n      }\n      // 防止按钮重复点击， 1000毫秒=1秒\n      setTimeout(() => {\n        this.isDisable = false\n      }, 1000)\n    },\n    // 创建model\n    async createModel () {\n      this.createModelIsDisable = true\n      this.createModelBody.project_id = this.receiveBody.project_id\n      const { data: createModelRes } = await this.$api.project.addModel(\n        this.createModelBody\n      )\n      if (createModelRes.code === 1) {\n        this.$message.success('添加模块成功！')\n      } else {\n        this.$message.error('添加模块失败！')\n      }\n      this.modelList()\n      // 防止按钮重复点击， 1000毫秒=1秒\n      setTimeout(() => {\n        this.createModelIsDisable = false\n      }, 1000)\n    },\n    // 删除model\n    async removeModelById (id) {\n      this.removeModel.model_id = id\n      const { data: res } = await this.$api.project.delModel(\n        this.removeModel\n      )\n      if (res.code === 1) {\n        this.$message.success('删除模块成功！')\n      } else {\n        this.$message.error('删除模块失败！')\n      }\n\n      this.modelList()\n    },\n    // 展示编辑用户的对话框\n    async showEditDialog (id, name) {\n      this.editModelBody.model_id = id\n      this.editModelBody.model_name = name\n      this.editDialogVisible = true\n    },\n    // 编辑model\n    async editModelById () {\n      const { data: res } = await this.$api.project.editModel(\n        this.editModelBody\n      )\n      if (res.code !== 1) {\n        this.$message.error('编辑模块失败！')\n      }\n      this.$message.success('编辑模块成功！')\n      this.editDialogVisible = false\n      this.modelList()\n    },\n    editDialogClosed () {\n      this.$refs.editFormRef.resetFields()\n    }\n\n  }\n\n}\n</script>\n\n<style lang=\"less\" scoped>\n.project_name_input {\n  width: 260px;\n}\n.model_table {\n  margin-bottom: 15px;\n}\n.goProject-dialog-footer {\n  float: right;\n  margin-right: 25px;\n  margin-bottom: 15px;\n  margin-top: 10px;\n}\n.createProjectButton {\n  margin-left: 10px;\n}\n.itemAddModel {\n  position: absolute;\n  left: 55%;\n}\n</style>\n"],"sourceRoot":"src/views/project/components"}]}