{"remainingRequest":"/Users/zhwtest/Desktop/VueProjects/flask_api_ui/node_modules/babel-loader/lib/index.js!/Users/zhwtest/Desktop/VueProjects/flask_api_ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/zhwtest/Desktop/VueProjects/flask_api_ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhwtest/Desktop/VueProjects/flask_api_ui/src/views/project/ProjectList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zhwtest/Desktop/VueProjects/flask_api_ui/src/views/project/ProjectList.vue","mtime":1586153949939},{"path":"/Users/zhwtest/Desktop/VueProjects/flask_api_ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhwtest/Desktop/VueProjects/flask_api_ui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zhwtest/Desktop/VueProjects/flask_api_ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhwtest/Desktop/VueProjects/flask_api_ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["ProjectList.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\"\n                   class=\"myBreadcrumb\">\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\n      <el-breadcrumb-item>项目管理</el-breadcrumb-item>\n      <el-breadcrumb-item>项目列表</el-breadcrumb-item>\n    </el-breadcrumb>\n    <el-card>\n      <div>\n        <el-row :gutter=\"30\">\n          <el-col :span=\"5\">\n            <el-button type=\"primary\"\n                       plain\n                       @click=\"goProjectInfo()\">新增项目</el-button>\n          </el-col>\n        </el-row>\n        <!-- 用户列表区域-->\n        <el-table border\n                  :data=\"projectListResList\">\n          <el-table-column width=\"50px\"\n                           label=\"uid\"\n                           prop=\"project_id\"></el-table-column>\n          <el-table-column label=\"项目名称\"\n                           prop=\"project_name\"></el-table-column>\n          <el-table-column label=\"创建人\"\n                           prop=\"create_user\"></el-table-column>\n          <el-table-column label=\"操作\"\n                           width=\"120px\">\n            <template slot-scope=\"scope\">\n              <!-- 修改按钮 -->\n              <el-tooltip class=\"item\"\n                          effect=\"dark\"\n                          content=\"修改\"\n                          placement=\"top\">\n                <el-button type=\"primary\"\n                           icon=\"el-icon-edit\"\n                           size=\"mini\"\n                           ricon=\"el-icon-edit\"\n                           circle\n                           @click=\"goProjectInfo(scope.row.project_id,scope.row.project_name)\"></el-button>\n              </el-tooltip>\n              <!-- 删除按钮 -->\n              <el-tooltip class=\"item\"\n                          effect=\"dark\"\n                          content=\"删除\"\n                          placement=\"top\">\n                <el-button type=\"danger\"\n                           icon=\"el-icon-delete\"\n                           size=\"mini\"\n                           ricon=\"el-icon-edit\"\n                           circle\n                           @click=\"removeProjectById(scope.row.project_id)\"></el-button>\n              </el-tooltip>\n            </template>\n          </el-table-column>\n        </el-table>\n        <el-pagination background\n                       :current-page=\"projectListBody.page_num\"\n                       @current-change=\"handleCurrentChange\"\n                       layout=\"prev, pager, next\"\n                       :total=\"1000\">\n        </el-pagination>\n      </div>\n    </el-card>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'ProjectList',\n  data () {\n    return {\n      projectListBody: {\n        page_num: 1\n      },\n      createProjectBody: {\n        project_id: '',\n        project_name: ''\n      },\n      enitProjectBody: {\n        project_id: '',\n        project_name: ''\n      },\n      delProjectBody: {\n        project_id: ''\n      },\n      projectListResList: {\n\n      },\n      addDialogVisible: false,\n      editDialogVisible: false,\n      addRulesForm: {\n        project_name: [\n          { required: true, message: '请输入项目名', trigger: 'blur' }\n        ]\n      }\n    }\n  },\n  created () {\n    this.projectList()\n  },\n  methods: {\n    // 点击跳转至ProjectInfo页面\n    goProjectInfo (_id, _name) {\n      this.$router.push({ path: '/project/info', query: { id: _id, name: _name } })\n    },\n    // 监听 页码值改变的事件\n    handleCurrentChange (newPage) {\n      this.projectListBody.page_num = newPage\n      this.projectList()\n    },\n    // 获取所有项目列表\n    async projectList () {\n      const { data: projectRes } = await this.$api.project.getProjectList(\n        this.projectListBody\n      )\n      if (projectRes.code !== 1) {\n        return this.$message.error('获取项目列表失败！')\n      }\n      this.projectListResList = projectRes.data\n    },\n    // 监听添加对话框关闭事件\n    addDialogClosed () {\n      this.$refs.addFormRef.resetFields()\n    },\n    // 展示编辑的对话框\n    async showEditDialog (scope) {\n      this.enitProjectBody.project_id = scope.row.project_id\n      this.enitProjectBody.project_name = scope.row.project_name\n      this.editDialogVisible = true\n    },\n    editDialogClosed () {\n      this.$refs.addFormRef.resetFields()\n    },\n    // 修改信息并提交\n    editProjectInfo () {\n      this.$refs.addFormRef.validate(async valid => {\n        if (!valid) return\n        const { data: res } = await this.$api.project.editProject(\n          this.enitProjectBody\n        )\n        if (res.code !== 1) {\n          return this.$message.error('修改信息失败！')\n        }\n        // 关闭对框\n        this.editDialogVisible = false\n        // 刷新数据\n        this.projectList()\n        // 提示信息\n        this.$message.success('更新成功！')\n      })\n    },\n    // 根据id删除\n    async removeProjectById (_id) {\n      this.delProjectBody.project_id = _id\n      // 弹窗询问是否删除\n      const confirmResult = await this.$confirm(\n        '此操作将永久删除该项目, 是否继续?',\n        '提示',\n        {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }\n      ).catch(err => err)\n      if (confirmResult !== 'confirm') {\n        return this.$message.info('已取消删除！')\n      }\n      const { data: res } = await this.$api.project.projectDel(\n        this.delProjectBody\n      )\n      if (res.code !== 1) {\n        return this.$message.error('删除信息失败！')\n      }\n      // 提示信息\n      this.$message.success('删除成功！')\n      // 刷新数据\n      this.projectList()\n    }\n  }\n}\n</script>\n\n<style lang=\"less\" scoped></style>\n"],"sourceRoot":"src/views/project"}]}