{"remainingRequest":"/Users/zhwtest/Desktop/VueProjects/flask_api_ui/node_modules/thread-loader/dist/cjs.js!/Users/zhwtest/Desktop/VueProjects/flask_api_ui/node_modules/babel-loader/lib/index.js!/Users/zhwtest/Desktop/VueProjects/flask_api_ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/zhwtest/Desktop/VueProjects/flask_api_ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhwtest/Desktop/VueProjects/flask_api_ui/src/views/user/UserList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zhwtest/Desktop/VueProjects/flask_api_ui/src/views/user/UserList.vue","mtime":1585536608871},{"path":"/Users/zhwtest/Desktop/VueProjects/flask_api_ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhwtest/Desktop/VueProjects/flask_api_ui/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhwtest/Desktop/VueProjects/flask_api_ui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zhwtest/Desktop/VueProjects/flask_api_ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhwtest/Desktop/VueProjects/flask_api_ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["UserList.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <!-- 面包屑导航区域-->\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\n      <el-breadcrumb-item>用户管理</el-breadcrumb-item>\n      <el-breadcrumb-item>用户列表</el-breadcrumb-item>\n    </el-breadcrumb>\n    <!-- 卡片视图区域-->\n    <el-card>\n      <el-row :gutter=\"30\">\n        <el-col :span=\"5\">\n          <el-button type=\"primary\"\n                     plain\n                     @click=\"addDialogVisible = true\">新增用户</el-button>\n        </el-col>\n      </el-row>\n\n      <!-- api列表区域-->\n      <el-table border\n                :data=\"userList\">\n        <el-table-column width=\"50px\"\n                         label=\"uid\"\n                         prop=\"uid\"></el-table-column>\n        <el-table-column label=\"姓名\"\n                         prop=\"username\"></el-table-column>\n        <el-table-column label=\"角色\"\n                         prop=\"role\"></el-table-column>\n        <el-table-column label=\"状态\"\n                         width=\"80px\">\n          <template slot-scope=\"scope\">\n            <div class=\"apiStatus\">\n              <font v-if=\"scope.row.status\"\n                    color=\"#67C23A\"\n                    class=\"apiActive\">启动</font>\n              <font v-else\n                    color=\"#F56C6C\"\n                    class=\"apiNoActive\">禁用</font>\n            </div>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"操作\"\n                         width=\"150px\">\n          <template slot-scope=\"scope\">\n            <!-- 修改按钮 -->\n            <el-tooltip class=\"item\"\n                        effect=\"dark\"\n                        content=\"修改\"\n                        placement=\"top\">\n              <el-button type=\"primary\"\n                         icon=\"el-icon-edit\"\n                         size=\"mini\"\n                         ricon=\"el-icon-edit\"\n                         circle\n                         @click=\"showEditDialog(scope)\"></el-button>\n            </el-tooltip>\n\n            <!-- 重置密码-->\n            <el-tooltip class=\"item\"\n                        effect=\"dark\"\n                        content=\"重置密码\"\n                        placement=\"top\">\n              <el-button type=\"warning\"\n                         icon=\"el-icon-setting\"\n                         size=\"mini\"\n                         circle\n                         @click=\"resetPassword(scope)\"></el-button>\n            </el-tooltip>\n          </template>\n        </el-table-column>\n      </el-table>\n    </el-card>\n    <!-- 添加用户对话框-->\n    <el-dialog title=\"添加用户\"\n               :visible.sync=\"addDialogVisible\"\n               width=\"50%\"\n               @close=\"addDialogClosed\">\n      <!-- 内容主体区域-->\n      <el-form ref=\"addFormRef\"\n               :model=\"createUser\"\n               :rules=\"addRulesForm\"\n               label-width=\"70px\">\n        <el-form-item label=\"用户名\"\n                      prop=\"username\">\n          <el-input v-model=\"createUser.username\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"邮箱\"\n                      prop=\"email\">\n          <el-input v-model=\"createUser.email\"></el-input>\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\"\n            class=\"dialog-footer\">\n        <el-button @click=\"addDialogVisible = false\">取 消</el-button>\n        <el-button type=\"primary\"\n                   @click=\"addUser\">确 定</el-button>\n      </span>\n    </el-dialog>\n    <!-- 修改用户对话框-->\n    <el-dialog title=\"修改用户\"\n               :visible.sync=\"editDialogVisible\"\n               width=\"50%\"\n               @close=\"editDialogClosed\">\n      <!-- 内容主体区域-->\n      <el-form ref=\"editFormRef\"\n               :model=\"editUser\"\n               :rules=\"addRulesForm\"\n               label-width=\"70px\">\n        <el-form-item label=\"角色: \">\n          <el-radio-group v-model=\"editUser.role_id\">\n            <el-radio :label=\"1\">User</el-radio>\n            <el-radio :label=\"2\">Leader</el-radio>\n            <el-radio :label=\"3\">Admin</el-radio>\n          </el-radio-group>\n        </el-form-item>\n        <el-form-item label=\"状态: \">\n          <el-radio-group v-model=\"editUser.status\">\n            <el-radio :label=\"true\">启用</el-radio>\n            <el-radio :label=\"false\">禁用</el-radio>\n          </el-radio-group>\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\"\n            class=\"dialog-footer\">\n        <el-button @click=\"editDialogVisible = false\">取 消</el-button>\n        <el-button type=\"primary\"\n                   @click=\"editUserInfo()\">确 定</el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    var checkEmail = (rule, value, cb) => {\n      const regEmail = /^[A-Za-z0-9\\u4e00-\\u9fa5]+@[a-zA-Z0-9_-]+(\\.[a-zA-Z0-9_-]+)+$/\n      if (regEmail.test(value)) {\n        return cb()\n      }\n      cb(new Error('请输入合法的邮箱！'))\n    }\n    return {\n      queryInfo: {\n        page_num: 1\n      },\n      userList: {},\n      // 新增用户绑定参数\n      createUser: {\n        username: [],\n        email: []\n      },\n      editUser: {\n        uid: '',\n        role_id: '',\n        status: ''\n      },\n      editUserRoles: {\n        uid: '',\n        role_id: ''\n      },\n      editUserStatus: {\n        uid: '',\n        status: ''\n      },\n      userStatus: true,\n      addRulesForm: {\n        username: [\n          { required: true, message: '请输入用户名', trigger: 'blur' }\n        ],\n        email: [\n          { required: true, message: '请输入邮箱', trigger: 'blur' },\n          { validator: checkEmail, trigger: 'blur' }\n        ]\n      },\n      // 新增用户窗口打开关闭\n      addDialogVisible: false,\n      // 编辑用户窗口打开关闭\n      editDialogVisible: false,\n      resetPasswordBody: {\n        uid: ''\n      }\n    }\n  },\n  created () {\n    this.getUserList()\n  },\n  methods: {\n    // 监听添加用户对话框关闭事件\n    addDialogClosed () {\n      this.$refs.addFormRef.resetFields()\n    },\n    // 点击”确认“提交前的预校验\n    addUser () {\n      this.$refs.addFormRef.validate(async valid => {\n        if (!valid) return\n        const { data: res } = await this.$api.user.createUser(this.createUser)\n        if (res.code !== 1) {\n          this.$message.error('添加用户失败！')\n        }\n        this.$message.success('添加用户成功！')\n        // 添加成功关闭对话框\n        this.addDialogVisible = false\n        // 重新获取列表数据\n        this.getUserList()\n      })\n    },\n    async getUserList () {\n      const { data: userRes } = await this.$api.user.getUserList(this.queryInfo)\n      console.log(userRes)\n      if (userRes.code !== 1) {\n        return this.$message.error('获取用户列表失败！')\n      }\n      this.userList = userRes.data\n    },\n    async resetPassword (scope) {\n      console.log(scope)\n      this.resetPasswordBody.uid = scope.row.uid\n      const { data: getMGRes } = await this.$api.user.resetPasswordApi(\n        this.resetPasswordBody\n      )\n      if (getMGRes.code === 1) {\n        return this.$message.success('修改成功！')\n      }\n      return this.$message.error('修改失败！')\n    },\n    editDialogClosed () {\n      this.$refs.editFormRef.resetFields()\n    },\n    // 展示编辑用户的对话框\n    async showEditDialog (scope) {\n      console.log(scope)\n      if (scope.row.role === 'User') {\n        this.editUser.role_id = 1\n      } else if (scope.row.role === 'Leader') {\n        this.editUser.role_id = 2\n      } else {\n        this.editUser.role_id = 3\n      }\n      this.editUser.status = scope.row.status\n      this.editUser.uid = scope.row.uid\n\n      this.editDialogVisible = true\n    },\n    // 修改用户信息并提交\n    editUserInfo () {\n      this.$refs.editFormRef.validate(async valid => {\n        if (!valid) return\n        this.editUserStatus.uid = this.editUser.uid\n        if (this.editUser.status) {\n          this.editUserStatus.status = 'True'\n        } else {\n          this.editUserStatus.status = 'False'\n        }\n\n        const { data: statusRes } = await this.$api.user.onOffUserApi(\n          this.editUserStatus\n        )\n        if (statusRes.code !== 1) {\n          return this.$message.error('修改用户信息失败！')\n        }\n        this.editUserRoles.uid = this.editUser.uid\n        this.editUserRoles.role_id = this.editUser.role_id\n        const { data: roleRes } = await this.$api.user.setRoleApi(\n          this.editUserRoles\n        )\n        // 关闭对框\n        this.editDialogVisible = false\n        // 提示信息\n        this.$message.success('更新成功！')\n        // 刷新数据\n        this.getUserList()\n      })\n    }\n  }\n}\n</script>\n\n<style lang=\"less\" scoped>\n.apiStatus {\n  padding-left: 10px;\n  .apiActive::before {\n    content: \"\";\n    display: block;\n    width: 10px;\n    height: 10px;\n    background: #67c23a;\n    border-radius: 50%;\n    position: absolute;\n    left: 10px;\n    top: 50%;\n    transform: translate(-50%, -50%);\n  }\n  .apiNoActive::before {\n    content: \"\";\n    display: block;\n    width: 10px;\n    height: 10px;\n    background: #f56c6c;\n    border-radius: 50%;\n    position: absolute;\n    left: 10px;\n    top: 50%;\n    transform: translate(-50%, -50%);\n  }\n}\n</style>\n"],"sourceRoot":"src/views/user"}]}